{"hash":"5e4777242350a1c7ffc1e2ad628200832ced6734","data":{"post":{"title":"Shadertoy to Godot - Night Vision Screen Shaders","path":"/shadertoy-to-godot-night-vision-screen-shaders/","date":"8. July 2020","timeToRead":18,"tags":[{"id":"godot","title":"godot","path":"/tag/godot/"},{"id":"shadertoy","title":"shadertoy","path":"/tag/shadertoy/"},{"id":"night vision","title":"night vision","path":"/tag/night%20vision/"}],"description":"Converting night vision shaders from Shadertoy to Godot to be used as screen shaders","content":"<h2 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h2>\n<p>In this guide we're going to take some interesting night vision shaders from Shadertoy and port them over to Godot to use as screen shaders, so we can have a cool effect for our 3D scene.</p>\n<p>Shaders are not my specialty (yet) so I won't be able to describe every shader in detail but what I can describe is differences between the original and ported versions so that it can maybe help you port over shaders yourself in the future. Each example will begin with the original shader followed by the Godot shader in order to be as concise as possible.</p>\n<p>If you would like to see the final results, you can find the GitHub repo <a href=\"https://github.com/robertcorponoi/godot-night-vision-screen-shaders\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<p><strong>Note:</strong> These shaders probably use various licenses, so I recommend asking the author for permission on Shadertoy if the license is unknown or just use them as a baseline to create your own shaders.</p>\n<h2 id=\"table-of-contents\"><a href=\"#table-of-contents\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Table of Contents</h2>\n<p>If you would like to skip to a specific shader, use the navigation menu below:</p>\n<ul>\n<li><a href=\"#creating-a-screen-shader\">Creating a Screen Shader</a></li>\n<li><a href=\"#shader-1---grainy-night-vision\">Shader 1: Grainy Night Vision</a></li>\n<li><a href=\"#shader-2---grainy-night-vision-alt\">Shader 2: Grainy Night Vision Alt</a></li>\n<li><a href=\"#shader-3---blur-night-vision\">Shader 3: Blur Night Vision</a></li>\n<li><a href=\"#shader-4---scanlines-night-vision\">Shader 4: Scanlines Night Vision</a></li>\n<li><a href=\"#shader-5---pixelated-night-vision\">Shader 5: Pixelated Night Vision</a></li>\n</ul>\n<h2 id=\"creating-a-screen-shader\"><a href=\"#creating-a-screen-shader\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Creating a Screen Shader</h2>\n<p>Before we get into the shaders, let's see how we can create a screen shader in 3D. First, we need to start out with a 3D scene so create a new scene and set the root node to be a spatial.</p>\n<p>After this, we want to set up a little scene so we can actually see something through the night vision shader so just add a couple CSG spheres or shapes and add a Camera that's pointed towards them.</p>\n<p>Here is the scene I've set up below:</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 908 479' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-35a89d92a46a8bf6c56ca56e5286dbe9'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-35a89d92a46a8bf6c56ca56e5286dbe9)' width='908' height='479' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAiCAYAAADvVd%2bPAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAMcUlEQVRo3q1XWY8kRxGuPwBCyMaDjbBsw8x09/RR1V1933f39DH3zn3P7K4FPwKJBz%2bC4MXiPyAeLIFZ39jGawuvJcQb42NtcUjGD3h3ERgp%2bCKysrq6p2Z2bfHwKbMyI%2bP4MiKy27jx/h3y4rcX4HnGmT9%2b80D4XMbn/nwb4z/H1h4Ez1%2bGS/y%2b4YMXPDBe%2buAuefHiBXhBcEfh/fO48UC4S78%2b%2bxjj5w8of97hc4A/Lwr8/X7pArzswHjto7v0KuPD83jlErx8ET7whzJ6j2588Anmdy6UOwcfG6/cB69eAI51hHsC443b98gPr1%2bEjxR%2b96VxV8aXPvwEhu98hfPj0H68fomvb1yCNx0YNz%2b%2bR1689QD4/f1w%2byL8i167/QkM371ExoP72HnrAXHzEhjv/e0L8sMtwX/%2bL3jXAeu8%2bZe/Y/5vmb/r2Xv3S%2bv94j57/nFNwnj77B/ki/cV3vmKeNv3%2bzN68%2bwM809d/V8V75yxjs9Ga2ee0RefejBaN66dHNLV4xFOjw7GcHK4P4bjg70xHO0Den4wmvt%2bQ/b0%2bjodH47rOGa9oluNkzZPxA%2bFU3yfHkHu5BodATw/1X4fj8ciODmiaz64fnosMDqtJjG6ghZ1222gRfOdNvU6HerPd2lh0HextDCkRWBhOKDF4ZBWlpcwDmioZTDv9%2baph3ODXo8G/R50dQS9bpcWV2EP%2bttNNXZgs9VoCHiN0azXqdmoU6up1hv1Gr7VnMdae0CNdk99syzQYnn3u3buW0Otj2Bsbm7R9s4O7e7u0t7ePh0cHNLB4SEdHx/T0dGRgOeCkxO6evWaQNbxfXp6KnuH%2bH766tN0grUTvY6R906c8ejomK7%2bcFfO7u3vu7I8PxSbJ2J7Z2cXfhwI2Cfl2x7t7h3Qzv4xbe/u09bmJu1gfWtrm65cWceo4uC5%2bt4mjm1lZZVWV1dp7coVWlu7QkvLy7S8vCJrq6trZOzvH8hBNrQNwzxnB/jw7u4ebWDchPL1jU0BG%2bWRnbuyvgFDO5DdhkM7dLRzTFsb%2bN7ehsF1keNxE86wHpbdOVqVOe8p3dsu/NY2Eeg69K9tH9L61p74siX6YHMb%2buAjf287cwbHsQvCmFgm/fDwaAxyyQCTbywsrdBwcZmWVtYEi8urMvaHS9RfWKJub4j5Ig0wZ/BapzeQ9fY8yqC3Rt3OkLrdBaT8MsphFSWwRAs9jP0lajuyjfY85Ic0WOvK%2bQ7WWt0%2bNTs9QRvztt83dNV7K9TsDuVbn%2bn2F0QH%2b8Aj2%2bj21Tg/WBDZLtvGWg/%2bcwy9gYKaL8i%2bwcpa3YEorTY7Co0OlWstqrfmpdYq%2bK41u%2b4o%2b/U21Zuo9fYyNXC2DtQQZA1rnc4i6ndI9UaPyo025csNkS9WmlTtVahUa1Kh0hCUYIfHbLFGuXKdcqU65Us1ymJMV3uUrc7Lfg5rvMfzYrXpruXLdVcPrzPYnvaRRx1THf41hOC%2bxMUxG5liFcaUcZ6z0nShgnlNvsUxdqZQFeTKytkCDFUbXaqVe5TKV%2bRMrgBHSm33TLZQJztbwnddAsqWQES3LPZYV6ZQE1m1V5d1tpkqtShZHVCq2IBMRfaUPzVKQB/bS4rNqgSbzJXVXqbozrVP/M3zDPvPo8RYl3M8GikIsJPxicMCHOKRjTJBbNDOKoUhK03BSJo6uGk%2bl8uDmFxd9FjpAtlpyGUq%2bC7AsTx05DDPUbaRFpl4ukhmKk9RwIR8AuC1eKFFZq5JURvyWLOwFkvmYaMyQr6idADsi/aJydQytsTlxMPBO0TzeiJTcgiqksHB8SIL2ThowqAyUCIThplVhpkqCNjJOTNDGzsb9LOf/5j%2b%2bIfn0F3XaS6WkYDY2WgyR1YSzmUrFEsVKRTuUDA4pNnZAcVASgz7LGfCRgZytl2gUKpCc5kGhRJ5isQzDkEFIYIJ5XHOylAkkXXXY0JSUeZeOdYdd3yWebro6hNiAN7n2I0cHMzCqJ3IUcLGCCQcJTEcCMNgVIKCY1hngp4MWvTsL54h%2bu%2bf6K9nr9NPf/IjCplpdaOQYbk4AosnEVisQI8%2b0qdHH%2b7R1Df7NB2qQS4LmTwtzdr0g%2b9G6OnHI9Say1GQbekAYU8HLMGDlHA86wap19kmyzE0EZoE1sNyHENEoPTwHuvhfYPZjmEjGc9RCgaSuN2klaW0gxSQBeIwYPI%2bDofDSWrNz9OtW7%2bim2/8kp599hmycYOmzbeRp1A8DWc55asUTtZp6qGK4FvfqICACkXQG3KRDF2feoquPfYEXX/sKTp%2b9PtkI4vm7CwyLEXBWBI6MuLkHMpNEaCc5zkHzGXI3xE3wKybKV7yWI7J04GHnfN8UYZmaG4CnF58G0yQpCRISIAcG%2bAxEU1TDvu1JBpahInKYS9PmTgaTaZFdqFDyUqfwtkGfeexGn37kRpNPVyngFmiSK1DhWieth56nDannqCtqSdp4%2bEnKJPAXrFFkUxNEEtXJHgOgDNMbtIJkNf0rYccGSZGZ4t3X2RMpUNnAMfN34ZmTrMSdlItiFsIMZPOtyYmxMrjTAzA%2b5ALQ1EcwedSuNlCF128R4XSEE2pSxZeBivfROnUKZyukd2uUqzapziIqSHoztceos7Xp6iCDIjm6xTFCxAtNsnCExhJlt1M0DfKTgdjKV8CAlgPe7JAr6n4siOiHF0sa0igZtoNXqeaS0xCkcFG55zD4oSTpkxGFKke5ZuD82E8XWGkeBSjiUCiIIBTPgaY5XkyK/MgBHtYN%2b0yWU%2bGyf6eidvGjUM%2blquRhafUziJboD8AWwHYCjgZwGOQXyBPmgshvB9XvkW0zwJ18y4ppiIl6KxJBugUk6fNCY6FZqNJl1XdQDSLzKiZb5OFNDdxW3xzkbwKXICA%2bTuSr%2bG7TRHIRctdhxCFWAkEldsU5rNMCOStQpMS0BuPpCgRSZKNkZFCf7A4uGiKog4C8E%2bRknIxC%2bhMDToXOyJIZ/YoRskA3SV1c9FZwAd45JuYDidoJmJ7FEChjZpF84uiXuPFDiVwuwn8gLEqPQTXwY13KVYbUriMXsBBg4xwXhHDBMWEqBEi%2bLagI4QGOhO18YKoIAOwG4ZNE0FbIMWKqNHGNzdqJigJxLAWgXwM57hn8dkZPu%2bQI1mDmJikAJcHYDALHNh02JYb1x1UZ0VAUn/UTHius2M6HMdow5AtxmbhAK%2bH0CQjGQ4I7z56goVeEEcGxFH7ZqUrQVr4iRvBbQshCD4Mcpg0JlRKyyHZ29w4/WfYXweSARwI/GfbMYcck8nh1yyWFmI0Qbwew1pMMikpWWS4N%2b40GAlMCEnIXDsR9JRE0Kk3fvIiThPidc6UWT6LhjhtlYTU6TlLzqmzcKpaolgWZYEmaCFrFDHIGiYHvwIDjixfiobuQYrc9AhWeqwJzrrkJOWW2U/2JxBRfoUdgvgVi4MInhv6xlXtj7qkPI0YtTMcDI8Bxwl2Su9x8CEYDSLtQngJ5pIVl7SgQ6oEwh05a0KXBWLi4pQiBzWdKsPeqEa9foWlnlPniGGw7IyjZ4wcU5OTcWveSxBn0zTOGDPObSumR4a9LIcccnSXPe8IzlsFmklUYIRZH2WPDkiVD35f5BPOjY4Tw6Wk/dAZIzqcZ8z7WukS5T3uU7qMveAL0y%2bB27s85MiPKn4FXOastC/Lui%2bE/V4LTjUEwoHPxIuKCIYnjbV%2bLg/%2bZgK89c0BcICqtM7b16U17fHHJcd98tITWZNy9fH3GDETsRm6ficZ9Na/d1%2bMy61hH69AkFMe/yVCprot3SC9OkZBoUtnLenwLjms382W9NgtB50nOOjjnw5GgvXY01mjy1T/yHMz2SFGx2R4N7wpqV%2bAmQnm1Q1jPVFG2hfVHiM2%2btGhU0y/u95b5R4w6xAwacNrS9e3m/6eH2H6dr0NctqHIJVBSbdPyNxDNK8bo3RKOZ0957z9Po5xbVt5mrVr6LJZt9ZnPAFO66ZojdjWt8qGuQTkF54niBmf9NYXof0YvSTj2aJ/5gYmbnasUfr2LacE3C7u6ezaiHpeMpLuAal13Hq8NOHw%2bK3pzu9njKF7gH6%2bvE/c5Bn9CvntjZ7IkY5zJaR/xziviN95twR8jeh6j6PGUw3UekE9dxMO%2bwXvvc0RUUkpAXmzPfXqdVynuE7VSRvnssSRn/YhW/9mCZrjvxfEpgPDL5CxeucbT1TdEtBK9b/EkSPng/dzOJZLuLfh9%2bIEHIJZ96gck76kuhkwUSZ%2bzVIT632eGf8DMT22dmLB3xEAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"908\" alt=\"Scene Setup\" data-srcset=\"/assets/static/scene-setup.82a2fbd.815e52098567e0201973396848e16875.png 480w, /assets/static/scene-setup.a07f463.815e52098567e0201973396848e16875.png 908w\" data-sizes=\"(max-width: 908px) 100vw, 908px\" data-src=\"/assets/static/scene-setup.a07f463.815e52098567e0201973396848e16875.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/scene-setup.a07f463.815e52098567e0201973396848e16875.png\" width=\"908\" alt=\"Scene Setup\"></noscript></p>\n<p>Now for the screen shader part, let's say that your current scene heirarchy looks like so:</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 336 413' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-b1e3adba5fe678c3bcbc4787828715af'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-b1e3adba5fe678c3bcbc4787828715af)' width='336' height='413' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAABPCAYAAABbP8MLAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAGaUlEQVR42u2bWVMbRxDH%2bRZJJbYDCJDEIQMCXaATHdyHLJAESCAEiEPm8IHLIcb4SBwbH6lKJc5Lyi/5AKnKUx7zyf7p7t0Vi8BUKk%2bLPQ9Ts6udkab/2/2b7qlSQ1vnALi1dgSkd3QNwK5/dlkzxl%2bVxuu1dw2e9u1%2bOLsjaDAb0uT04brdQ71fBjY7vNR8sNF9S7vWbDTGmHMVROA1GutsbPPIdSPZyLY4XCE0GIPY%2bEgghYfZEqL%2bJBzdYQxGp%2bAPjaPHk0CXO4oebwLdnviVe/vycu1eTKSL%2bO74R2QX1uneA%2bfNsOYBw%2bN59AfHcD9TQC6ZxkGmiK6%2bIezde4zt3W9pwgYq2weYX9rG4nIVfYFh8Y4rJQCt9/mLt3j703u8oWbnUO8KooFdweWOoYXiYjg4iqN8GWOhMdhoUnIsh/hIFqmJPKm3hFB8BoHIBG72D0koXJXY555fmI/s2qjeRySRpnDo1zyAH7IIWhhQjNN1M/VOEsRGk9hVmslYVpCNtuljrxIYjXXx%2bq/b3MK11g6dAfzQeTMoZGxjQvJAMvLLlj400gQHC0G9IRL3rOYpFP215/XQsRoEtbgP6uv3mQUI0U1QBrXQvbs3isNcCYWRDAnhRjA2hcHYNNoJjAzD/oERdPZE0EHN1ReTkOBrK8ORITiVWcbRk5fIFzfPQrCdBGADOnvCuEbu8ZCMx19/4p9HT2TyfHFLjF6p3EFpfR/F8i6WV/ewufMQhZXbGJ8pCiRZRKuKwCH87Acdgu9%2bPYWg4QFGksDx7%2b6N4F15C7vpRThpcnBoBonRrIAwkrwFz%2bCogGRkcgGB8IS06dmS5dy/HoIeeolrm3fJnulTCNYLYEz6ghjwFQ3iayPG2W2MawaJwQLmAD%2bzKgzNELxm6xWo10HwrADfkHGyC7BHmDJAUVIXwMgImwwg6kJZDYT1EGSOfRSCTPzrBIvV8Sz%2b2LmHD5Uq/O4IPKEJDKVmZYeIj8wJD9z%2blMzhPEHLFGPSt3VYL/7tuvEzcyt4/PQVFpa35d5xDoKkzg1y5xdLFZRHMzisHiMRn0U6t4qByCQKpdsCQoZgYWWHaLqFlfU7qO4fYnXjHoYn5%2bWLZUu14C7w9Ps3AsHXb3%2bph6CeB3QGxAMWUzNYJ%2bCl9n6D3Z1EKDqJaDKDfGFTgBeOp%2bGl1DmSuCUeECdA8nPeIpkHVuLAKQR9ksKXK/sYIHsuhSAnQi7yCKeLy0YtC2QP4WLIACEbqlWKGgzrkyFrQtCPa829NX59FIIMPgdPYLCZdoHGmvG%2bWlZoNKvvAAJsWn8nbfH84i6EIMdFc3sAYSqH31d2cJwtwkHbRXw0J3soQy5GMOQ8oIOSJr5nr%2bDeykmQAcFMfhVPnr8mht0mEc5BMFyD4KP5Mv5%2bcIiTg5fwDk5idGpByuAlgh9ngjliwfbeIUpr%2b8jk1qhsPhIhrFwhCgTJeIbgiQFBV/B8MdRI7jFEHnCytoe5B7%2bjjSDopzI5nV1FdqEiIOFtMEFeEaT6gA9IuGxmLzJ7gBUh2OtLUgq/A394/OMQZHdhEW7ogGMIMjzYxXmclkQEzlSE/OVWLo%2bNdfBav74YgpoHGAYx/X1U4fUSMFr1FJIbuxEbr/V%2bfSfw1p4bKbH2PQFLZIT1EOSETSDoNEGwXfcAF%2b/jNDifnJGjsc2pPHxU7kYIfDHa5/l8kMvfaEq75jJ4bLqA1Hge3f1xecYFErsae4vVIMhngZwMldZ25cU5TkNAI3iYqr4AVUqZ6IS8%2bRTFfsgbx/BUgWJnF3PEgI3qA4FhsbxDXChjkbLD3btHkhmubx1Qu49l4gdzQcsKrQPB42cnch746vXPIordfCrMbsuHHE3kunPxaSykbokHeMgrfJQGc/k7NDwrhvHhCJeU3Pgz3ho5K%2bQ%2bRCLO5tfho0yRf9RKlSDvVIVSVbLYJrsJgsbgFtN5H8d/l052rRT2itvIGaFeChuZYJPD9Ez/IStlhZeeCV5E7FajDP6fizeXxVbLCJl1BvDPCHDZ1vVfDakfZ8XM0LwlXijAp96UAEoAJYASQAmgBFACKAGUAEoAJYASQAmgBFACKAGUAEoAJYASQAmgBFACKAGUAEoAJYASQAmgBFACKAGUAEoAJYASQAmgBFACKAGUAEoAJYASQAmgBFACfLqtJoDx377PqdUJ4Mfn1wK1P07%2bCwHk%2bhWOlRDOAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"336\" alt=\"Initial Scene Tree\" data-srcset=\"/assets/static/initial-scene-tree.9038e17.6ee3bdc4b01be89554fd66f7b39743f5.png 336w\" data-sizes=\"(max-width: 336px) 100vw, 336px\" data-src=\"/assets/static/initial-scene-tree.9038e17.6ee3bdc4b01be89554fd66f7b39743f5.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/initial-scene-tree.9038e17.6ee3bdc4b01be89554fd66f7b39743f5.png\" width=\"336\" alt=\"Initial Scene Tree\"></noscript></p>\n<p>We want to add a <code>ColorRect</code> node below the below the Camera node and then while the <code>ColorRect</code> node is selected, go to the top toolbar and select <code>Layout -> Full Rect</code> and it'll make the <code>ColorRect</code> take up the whole screen.</p>\n<p>Lastly, while the <code>ColorRect</code> node is selected, go to the inspector and change the material to a new shader material, click into the new shader material, and under <code>Shader</code> you click <code>New Shader</code> and finally click into that to bring up the Shader editor. After you write the shader I highly recommend saving both the shader and the material into their own resources so you don't have to create a new material and shader every time.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1552 968' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-1d2e6e50d44ef636f8fea4a439cb7447'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-1d2e6e50d44ef636f8fea4a439cb7447)' width='1552' height='968' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAoCAYAAABOzvzpAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAO2ElEQVRo3rVaWY8kx3EeAUtSEne44nJN7uzOzgznnp6%2b76v6vruOvnuO3Zk9yFktSUA2YNqGX/wLDL/4Fxh%2bsWRDlgFJD4IEPQuw/9KniKis7uqe7pklV374kFmRWVmZX0ZERmbWSqnQRblxCq06hlYZIxArY2sviPXPfdjYCeDJtl/ynG7uBkhmP3PeKeN6LJc6lN9U721w%2bZb9rtSRNoK3ICDfjyZL8EXKyNdOUaD%2bhVNtHAU0HIfyVB56i3aWg/tijyWAlXiBB3%2bGcusZKvolspURkvkOCrUxYlkDiZxFnRghRUSFkq3JczDRlHq56hDRDNfrIM11UiahjUyxh0TRQs4cUr5PbZlIlC0E4g34XfDF6vDHZmUBatsbqSChmaibL1BpXyBTHiKS1um7LXqnBl/0%2b8EfrxOZLWqnQWPqYKXYPMdhoEAzX0UoUUck1ZTCNBVyGs/qSBc7NFiTOs/lLcQ1QzoYy/BAuySvSWdZ7ovygGpSL5RuIlExpCxEbUVyLXnvOFxRaVk6w/U5zzIvl0Wr2PfmkCqZaJ29Qt14Du5nsjBAOG0hmu1%2bT3QQ03rSTiLfl0lfyRWb6HYHqDfaqNZaaBsGWrqJrFZAoVhGLl%2baoFCsIF8oT/K5gi1nWbFUnZTze5xK3RyX23Xy%2bbLUmaKMcqWOUrkqeUdeLFWQyRSIsCqq42fQyiMi4Iy0rItgsr0QrHWh5BTBG%2bCPN4kME0UyrZVgJIPLywsMR0MMBkOMTwcYjodEhA7DMmZhKliuVEE3dcGkjrngXXcbCjp/h0i3LBMmwzRhdSw0W214/Br8pBm%2bSBH%2baJm0tIJDku0dpwkZG16CJ43tgyR2PSkp2/dmceC7GZ5gHuFkDSuRWA5GqwWdPsgYn3Yw6vQwNBfAWI4TayC4qc4ErjZHVp/I78No6zB1IoNgESGNOvmHSIHMR0cqbyBNJpjKGdeQpPJspQPzxQVq7VOUGkMyzZY40EC0QsRdhy0vIxivkhNM5NE3TPR0AyYR8M0XT1Gy0ojUA4jrYcRNgsWIIN5xoRtBQiFG5dogIeA8y7h8pr4DbofrmBFEWgFUrBSen41gEQFd6kOXCOixGdab8IXz5GNMBGll8oYLhOJ1hArkQ0oIa%2bR3EjX827//HL/81W/w8//8FX7xX/%2bzEP/xi//Gr3/7O3z9s3%2bwTcAgtWvTh3XqgNVp4kfaPazk7%2bJO/R7u6D/BHetjvNe5j/e6hB5h%2bAneGxD6n9jPlL/Tv487g/tKfn8ilzpuGeGOSe0ZH2OlvopP62uwTPI9um0Oum6bUU0IKCCZ02lGm4J4lhxwZg4iayJTtVDVx/ibb/8J3/z1P%2bL119/ip9/83UJwGdfRO%2bQEQ9Es2Z0hH2YC%2br027lc%2bw48aD3DX/AyrvYdYHa3ho7NH%2bOiU8PQxPjonXDy2888ULtZVqp6fqvy5euZUtbE6pPb6a/ih8QAbxhZ6HfvbhiLAFAIaogH5So9WgTPkyl0ZbEJrL0SqSGZSMGi1oaUuyjHE7WAzuEZAjwj4uPopfth8gA87n%2bHu6CHunq9h9fIxVp8TXii8pAG9WhdI/gs7tbE%2bKZNyrn%2bp8OwR7p6t4e7wIT6wHuBJZwtdIqDtIoCdYrPZFg3Qyh20O0%2bRq1CMkajS8loX5zUPLmNwnuvchmi6QT6gsoSAmiKgRwScUGfPadYuHk0HffUEH325PsVP6fn1E1tOREzw2lXvC0UEk/j0kWjVBx0ioLuYAJ38UiBalIE3SAMqzRHKBDcR7woXAeZiDeg5GvBoMvtCgDNoZ%2bBO6uTduHoyIYI1g9tgDVgdEwG9v1qqAQ4BhWofpfpABs2z5mjAuwzceX%2bhBvQdAlrkA5iA8UN7xl4o1f5yfTrQN4yNSf7eV5T/amM6%2bDcKjsY45sDtMQFdIsDavFkDyPZ5aXOr%2b7uSMEtATJshoNttTU2g65jAmmiAqPWr9elsXykCnIHyoB0CHGJeuzSBCXhu%2b4HVE5uAdSKgY7VnnKCbAPYBtfYJOcDmjA/4i2lAUGkAf7xNa/HFaQ8PGg9tDRiQ%2bp%2bu2TPmEPB6qu73nMFeqYG/URrg1obXcxrg%2bAAi4P3uA2z3dnA27KHV1pdqQE0/QZHMgJfCdx38NR8QnDOBQV%2b3NaClVgHHBC6V579y2bsz%2b/P%2b4M3GrMyZ/Ze2ExQfcOKYAC2DXWOhCfiVBtSNU3GCvAw6nt7t9TnlwbgRctVZBH6Pt/7XCOixCVRcBIwUAbIKKO9%2b5aj/nKq/dvkCh4grFwFqFRCnenL7KhCKl6GV%2bLxihGyJttsUEmdpi51RkHzBRL7aQ9M8l1CY0yqZDMudepKfA7/LhC6PA1rOMvjQttkLlyN0SHAvfe7V4EvXEvhquizKKnBpEyBxQGd5HNBuGxQCl8QE6vopkTCkuJ%2bCnrlgiAchxJQsqcuBE5PllPM7aRow13G/xxFmNNWwQ%2bFryyBrQOMTfGh9Kh0VP3ChlsJLtRw6a70TCL1yrfUvZzGZfUWkmIATB5jXVwGekDqFwsehHAq1Psz%2bc/ED0fRyp%2baYAqu1mIBSdc7zLpF3gPNmwBHjSiJdsj9sLCbgw4GKBRxn6MDRisvpwFguK4bIVZmTqve4HWmvTxpgPsC6sYSARhOeQFZm3%2bxfQu9eEJ4thdG7lIDp0JfEzmEUu0cx2iJH5Pmf/%2bVfaQ/wLZ5sB0gep/KY1NmhOitR2g2axlwcUCICKkRAmwgwSQvYF1CHV4f2vsDBXfXMq4XIxqrsZG36PFR51iRG76HEF6vU5getT/CkdTMBg9MvcfHyGwwp7Y5eEF4uRP/kFcbnV6Q1xcmZ36NNLwLhNP7vf/%2bE3//hj3i8eSxnlwwuZ5JmTMCgTnSsJn6cvIcfpFdxp0C7wfJP8F6Ndm91hSbj/hQNJWvZeJ9lLSUnvE95htSpfTxp6/0K7QbztBssraFDu0HdtRt0CDgiAtqdC/Rl8K/QHb%2by0wXojb%2bAQabiIQL2vazyaUm5jYsXb6idM5rxhMgPfBnsHyex50nMOkGehbOTDvbSW3icXsdGfgMbBUJxExtlG5sVxpYNfmY5yXbq29ipbUvekdt1Z%2btvlGxsFjbxSHuMQPkQJ8OubMcnGsAHIkQA2%2b3w/Gs8v/pbDJ9%2bjQHlOb0GJb%2b4%2bnvkra8QTOkIJltycBvR%2bggVzuFPWSRrijyUNuCP1%2bSEeY4AHU8vhzjr9zDudDHuqvQWjKwOnvYHAs6/zTtO22f9Pk7PxxKE2WZorwKsAXz8lS710e5eokUoNcZyOMsHtqmCdQ18eJvIO%2bgKkoUuUtRGik%2bpHTnJEjlaZtO6TUC3YwkJFpmCSXGAwed7xuy5nQN%2bNp3zOxcMBfMGuNsRmKpNAn/b4rZNNkOTtsMtuQeI8ElurkupRWkH/kQLnmgDxzFaJaIO7OejcJVIy5LXT2L7kJwdOTxOJziaytg8fFGKBD3%2bFJKZIlKZEqUlpHOUz5YE/MxpWivbyFJgkq%2bhUG5%2bZ%2bRLjWk7i5Cd5jNaBYl0UUyAZ7zcHFOwM0CJ0lylT6pdXwg%2b2vdHCvCGNHGgnuASUBnXkWUwSsxmyiPEND7778vZebIwTVnuJXb98ZbAx4jdgiX1nDauo63g1GvDG61j36chruloUHTHp0J52hpzABOhbXGU9gXz4MPQSJry6ZbcZ8Sz7SWwy0IpigT59idbJJvQDLkpSeYtsbEk2Ui21JM8X3LwJUg03ZbG7ZSQUVCyWEaXNJJuCdz1ucyWudGWixi%2bNGHky32K/fvyXa6/780gEOdzAHtwHN/zSS6f%2bB6Qfzjw5wSHBCaLj8k5eGLnxh5/l7z8zjJIeYpMIJingCEMny%2bFaCCDCCEQySEUK%2bA4yGfuMRx4E1McuzAnO6I2ON0/jlManynjgITlhySbIin1eD3eO4rCbA7Q7JxS/M%2bhKt8F5pCiNJXXKdUpnNWhUQzP4a3sCpN1QZiiOq6To41TsUqOT2vSTrIgu8llCBL4zHHlgJjjoGCHoqZdwh5HSK5IivH5fniSLoNdHpm8s0Wyrb1pGV9oct6%2bSJ3DbhBbuyHEaFDRZBm%2bkB228sFltmjK4HmAvImRHWG8eu08kE2D9wJ8f2Dv9uoTguYhZamGfS/AqsS3sds06C3uPKXuAe8cRmxyjlT4yOS40t2jKWFTRO33JnWm7zIRi8BExMiBZSne3/PE5R7gkDSAD0ZZpfnZHymSE8uJ6u54kuLtd47sG6HtwwQ%2bP4hLKuVHyaXg8s8PeJxRRwOC2Kf42EcqyTgmVT4mb3lM5nDAak0rxc7BdLDcwd1D98AXkRBTstl68q5K91Q9NhUmWyNbb9KWNp6jIIiWs31aBewOp6XTNtLiG94NWSGAiRcNYBM4oI74aW0M0IC9/rQQ4GUSQpoQIHbqsTvs3M87s/c2ebdsHo7c689QKJsVwrijBz5N3fXNDsC%2bG/x%2b4PeZyOOgRqZUsjWAO8AEeAnHpAkecloecoBMwq43IbumrbnBuDt%2b26DfFhvq5wX%2bkWLvODVDgAzgnWd%2bCmdXKATwKrCrVJvBXpvTebV2NEDKDiKT8n2q72jGd8FNmuMmwCaB8DazPDGV5eC2bRMIMwFZbJIT9NDa6GHHQh/1q8F/t19PQpPfTzZ2grcgcKOmcBl3lC8/Yxn7LiBK4Pwh9XfZrPLADsmEtw%2biN6xYERk4T6IvnMMKr7W8JnOIyA4wSA2EyAcEVdjoT5cQyJThTxYnjmshPLFpuSe2vJ4qZ4KdfbuDybJIJsCBCu/ttZKFamsslyLTQ9Da0usx%2bzToFqgTowCHwvw3Bf%2bAxP/fRDhV%2bShB5BzBKYSVzK6v3rmGZfLZ8pD8GlOfgP8V4u0r/4dko2kHQrT%2b85UYH4fZJ75VBfcpcHWS3nQSPDkmcx%2bJxXN92iIO5N8ZTvk5lushqnXlPxpO7Tp9qRPVuHxAuzPaoWU63x%2b013D/v8PfSBaGtG0d0hZ4RBi4HOBfzvnNYyVJ%2b%2bNS81T%2b8tIqQ1Ra58hVR7QJsVCsn0jKz1yH/woLZ3uIl58hmDLkjy/%2boysQf3fwn2b8Jxn/jcbfSRE40Jk6uNT/C/4M066rL7HBFlgAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1552\" alt=\"Screen Shader Material Setup\" data-srcset=\"/assets/static/screen-shader-setup.82a2fbd.7e9e5e4c629a12086371b6cc92a4bf1b.png 480w, /assets/static/screen-shader-setup.cbab2cf.7e9e5e4c629a12086371b6cc92a4bf1b.png 1024w, /assets/static/screen-shader-setup.c8d54d3.7e9e5e4c629a12086371b6cc92a4bf1b.png 1552w\" data-sizes=\"(max-width: 1552px) 100vw, 1552px\" data-src=\"/assets/static/screen-shader-setup.c8d54d3.7e9e5e4c629a12086371b6cc92a4bf1b.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/screen-shader-setup.c8d54d3.7e9e5e4c629a12086371b6cc92a4bf1b.png\" width=\"1552\" alt=\"Screen Shader Material Setup\"></noscript></p>\n<p>Now that the shader editor is open you can use any of the shaders below and when you run your scene you'll be able to see your 3D scene but with a night vision filter in front of the camera.</p>\n<h2 id=\"shader-1---grainy-night-vision\"><a href=\"#shader-1---grainy-night-vision\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shader 1 - Grainy Night Vision</h2>\n<p>This first shader is going to consist of a grainy night vision effect with a bit of tunnelling around the edges. The original code for this shader can be found on <a href=\"https://www.shadertoy.com/view/Xsl3zf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Shadertoy</a>.</p>\n<p><strong>Shadertoy Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// by Nikos Papadopoulos, 4rknova / 2013</span>\n<span class=\"token comment\">// WTFPL</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span> <span class=\"token keyword\">float</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">43758.5453123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">mainImage</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> fragColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> fragCoord <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">vec2</span> p <span class=\"token operator\">=</span> fragCoord<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> iResolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">vec2</span> u <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> <span class=\"token number\">2.</span> <span class=\"token operator\">-</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec2</span> n <span class=\"token operator\">=</span> u <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>iResolution<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> iResolution<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec3</span> c <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>iChannel0<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">;</span>\n    \n    \n\t<span class=\"token comment\">// flicker, grain, vignette, fade in</span>\n\tc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>iTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> iTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.075</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    c <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span> iTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n\t\n\tc <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0722</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t  <span class=\"token operator\">*</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span> <span class=\"token operator\">-</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>iTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tfragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>Godot Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// For Godot we have to specify the shader type. Since this shader goes on a ColorRect node, it's 2D and all 2D shaders are of type `canvas_item`.</span>\nshader_type canvas_item<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// I wanted to extend the original shader a bit by offering 2 params that could be customized via in the inspector or code.</span>\n\n<span class=\"token comment\">// The amount of time that it takes to fade in from black to the night vision. A value lower than 1 will result in faster fade in times and a value higher than 1 will result in longer fade in times.</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">float</span> fade_in_delay <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// The amount of grain applied to the night vision.</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">float</span> noise_amount <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Only difference here is that we don't need to specify `in` in the parameter.</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">43758.5453123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// `mainImage` is always `fragment` in Godot and it takes no arguments.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">fragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Shadertoy has an `iResolution` global variable but we don't have access to that in Godot. The Godot docs recommend either using the following definition below or passing it in manually.</span>\n\t<span class=\"token keyword\">vec2</span> i_resolution <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> SCREEN_PIXEL_SIZE<span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// `fragCoord` is `FRAGCOORD` in Godot.</span>\n\t<span class=\"token keyword\">vec2</span> p <span class=\"token operator\">=</span> FRAGCOORD<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">vec2</span> u <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> <span class=\"token number\">2.</span> <span class=\"token operator\">-</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec2</span> n <span class=\"token operator\">=</span> u <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>i_resolution<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Instead of `iChannel0` we have `TEXTURE` and `SCREEN_TEXTURE` available to us and since we want this to be a screen shader we use `SCREEN_TEXTURE`.</span>\n\t<span class=\"token keyword\">vec3</span> c <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// Instead of `iTime` we use the global `TIME`.</span>\n\tc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>TIME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> TIME<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> noise_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> n <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.075</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span> <span class=\"token operator\">*</span> fade_in_delay<span class=\"token punctuation\">,</span> TIME<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n\t\n\tc <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2126</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0722</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span> <span class=\"token operator\">-</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>TIME<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// `fragColor` is `COLOR` in Godot.</span>\n\tCOLOR <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>So I've highlighted the differences but I'll go over them again quickly. Every shader in Godot needs to have a <code>shader_type</code> and since this is a screen shader and will be used on a <code>ColorRect</code> node, it's the same type as all 2D shaders, <code>canvas_item</code>.</p>\n<p>Below that I've added a couple uniforms so that the fade-in time and noise amount can be adjusted in the inspector or by code. The rest comes down to constants such as <code>iResolution</code>, <code>fragCoord</code>, <code>time</code>, and <code>fragColor</code>. <code>iResolution</code> is a global in Shadertoy that we have to define and according the Godot docs we can define it as <code>1.0 / SCREEN_PIXEL_SIZE</code> or we can pass it in so we just use the first method. The other globals match up to other globals in Godot such as <code>fragCoord</code> is <code>FRAGCOORD</code>, <code>time</code> is <code>TIME</code>, and <code>fragColor</code> is <code>COLOR</code>.</p>\n<p>An image of the effect can be seen below and a short gif of it can be found on Gyfcat <a href=\"https://gfycat.com/willingwhitebantamrooster\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 925 467' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-510fb6af4a9deb9fccee7563678d6f4a'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-510fb6af4a9deb9fccee7563678d6f4a)' width='925' height='467' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAMeUlEQVRo3s1Y%2bXedVRV9md%2bQvOS9JC/Te2mSTnRM0zZpm07Y2mpbOkHFagUEKqgMLSWmLZW2tDigSxfOA06gIlRQQCpYpEAFa6WAiiz8b65n73Pu/e4L6fJX31pnffe703fPvvvsc%2b9LNS5pcel1BZfd1umaP97t8reWXetd/a5tctAVTsx0xS/Ndu3fmOs6vzffdf5wget8ZIEr/WKR6/rVYtf1%2bLDr%2brU8nxhW%2b81wVbn7zBLX/aTYbxPrwvtTYk%2bPaN3vRpL2M/Z8SsuYR8cMqz0RGb77S7PHFrvSo4tc6ScLuc6O78xzHQ9f5dq/OscVT85ybYcHXeuBGS6/v%2bya9/a47PaSS68vuKaRFpdqWpbnS3a7APDJHpe/rczOhfuGOLj963M5IZwv/WyhfvjxyMEz6kTPs0tdzx/U%2bP7c0sSsvufsMu33vNgfl6k9v0zf0f7s0upxZ609moeAPSP2%2bxEFygMrayo9ZiD8eIHr%2bPY81/7QHNf%2blTmu8MWZru2eAZe/veKa9/W43K6Sy2woOvhOADIfKrrcjpJr%2bVSvAFBxbYcGXOF4tPvfnc%2bJ8QGiL7vBj8sighOy2N6XRsWWu94Xxf5kz5el7s9qfa%2bMud5z1oa%2beKLN18X158xejEzee16Q77ywXL/5zFIa2STAgJVkwiMLlQXfFBZ8WQC4fyZ9av18v2u5oVcB2NjumkZbBYDlAsDGIivRmP%2bsADAxqLsvCIJKnT%2bIAHhSaYkdwULihfe9OqZOnh9Ve1mdZp0BwT6vjYV29kHdea2nXViRtJ%2b3OVAv/QjYS6MBHDJHGITN4OaACT9fRMZ2fEtZUDwhYfCFQQXgJgHg2i6X%2bXAVAO0KwI297ITOYADpL1Tq/JHFfbzz2IlzyxMnXkkW3/cXsTfsCXt9hba9ruXyX1cm7Re0vnxxpb5LG8rsg/4Ax/f1c8QAAoSzGibdTyehAK1iGHxtris%2bYADcGQGwWQAYiwG4rsu13NLnWu%2b2%2bD81i4PJAADwqNLfx3ugJZzHwvwC31Dny38TJy6tcuW/r6IzdAp1eL9kdtHq34zefR9fvqhgBUC8vToWwGcYPmcsgBCLMJZ%2bulABkE0snppNnyiEIvK5Pd0us0kAWAEABAWIYHqNCOE1ndSB1rtmKAMekvj//nylvogfBM%2bLU6C%2bUTcsOHb8TTOpq7w17ipvj/NZvqwO%2bzLq0Y/Py9XjAjgeSA/EawaA6QI0geKI7CFrhWBj46BhDAERQe6%2baF16bYGZL72yTQAQFFDBbCBPUIMZYa%2bkxM%2bUXdu9A654ejZFBWEABnDnEc8XjPIXViQ7ieclBaHyzjiNzlm58o/V6jjqUH5HgYGDfH/b%2br1lhvGeFd4uRmzweiGb0S2CiJSIVFh8cDaFD1kN6R0%2bYddjX9PjAGClATCqz%2bzmDpfbWWJIYCAYgdBgdhAUC8c0O0BkoAlAnwzALl1WR/v/vcZV/rWaz/73tFx5dzXL/e%2bv0TLa/rOW7%2byPce9pW%2bWf1v5%2b8k57NwEPIUenRZCR9sBW5vx7ZjDdYc1YO1J788cUAPiWubrI2E8AAAPWJQCAATk5KGAQBrfcrM5DQKAPCA8AAWbggAGBQa7teHge0ac%2bnB8L4ufj3IsjgTIqe21gjPvnpVVJP9RFmQHhBxaCjfgmqS0HNmQtrKn1oK6v9Y5%2bgoB4JwjiC6if/WiHHoBGIwDSq9oUleV2IJJO6EwA9hkAn6todjDHC0eG6DyEBTmWJocN6AbK2Am0MZscHdJ%2bsKNm6O/LGHdsKDE/bsoYUDp8534dw%2b/4MbIe5vqDBoBQH2sHAGAzAdjSUeUrdE9PgoIEUVnnGdBJAEj/m/r0dBgB4HefH8dxWTIGmMCn6AVU1y%2bGYyYG6FR4TloZ8xwaSMrYyXuj%2bkNWljEAQOeeRcfxPQVCDjlHZBw2Bd8ES2WtOPZ6AJqv76ZP8I0MQAjIxjMN1pXTrmFurhoAMOD6KAREDPMyaaD/hLJAd093HnQkCKd1oWSJLZ5j8PTOezBQPjIYAGWuBmi%2bXwwAHAcIsJMKggeA35rQ834IgVsjBuzpoq5lP5JoQMO8nKuvpAWA7kbXMCurtIgAwCAC8Ok%2boolJiS4WOGnUNsp72gcWnJplTlY7QWofGaouH46A8fEcMwHgST8PLM3vvt%2bAo0MBaKwRIZuHCAp7efYHADj%2bggHQO9G9htlZV9fTJACUGl39YCYwIGtpkABAAyR38oYIBhyYkezmkcEkno8bAKe8zaYTwdlJc8jvfmyHEnDC7sfAWWgg8wQGnI704OhQFXvIABx5AYAPAcsCIQQAgGx6XVejANBZDQByJbJAACBmAADwC/Yi6J3HwvwiH5iVOB07OxntrN/dWB8mBj8QKh7EaRlwLBHJAMDdkQgaA6gBOzQEAgNmCgAlAtDg6gcyVWkwGwNwswLgNQAf8PHLBRyPGOBZgEPIFCHzi6PTEKsDU2J9IgEG/0dw98A%2bcQRtQQMguidUc0IWAkg2D8YyBKABN%2bo5IGQBrwECQD0AkM1P1QKAGZlwOAADfAi0AIBbTATllhgY4LOAT2UAAYs6HTFAnMM4sAmpNbu1UxcgAPOE6SnvATmocyN/53aX9DAG4eKptId0R2jxGydjDRhSIT2s7CJTPQOEvc2f6AkimLGDEDJA/VDGYfNTtR0AIC0MyCcaIHcC3Jgw2IcAzwJyGAr09UJ4RHeBWcAUGoDAQSCfXt3GuMN/DjDkXswbs4LOTyggud1d%2bn0I8S415G8wgmeBSHj9eSKIJjXAANhvAOzrqdYACwEAAN8VgAFjAACQXeICrjMAQMP9xgCvAz4N3jcUwoD0P2Fp0C4f%2bDDOGHAaRvSFZaClz9c0nDJl8WAb2SLf53ObAgH2AAjS3kIuHIh8JjFNQZhi98EygBY0YFekAWMxAO0RA%2bKjsD8HSBxhMi7UUiHD4LAKVDjB%2bXCQcriAyMJ564KBCXYL4/%2bPWBRAxjEVlL/WaLqhSOepRdgMM/yBwb/qJNTiU2JIo4fUeX8O8BriNaCKAVUAFA0AnANkkfgQkd9jDLhB0yBPg3ckuxWEa3IwsAELwQc9g%2bAI7xpwXq6eiD1eu7dre3BcaM935GqECbKRAEHb2G5WJGj4NuN%2bMjpZWgiEDCBsJQCydmoAwmqbAWAXP2S%2bBIB%2bA0Doyh0A5XZ3JcdhiSWKoUxMhUU4AOkDCRvAEDqD2N1hIrZDDx90ADu6xcJrZyJyjHP0BwgyHhoUwmZtIVxawgFNxvBvu3DUVg3hKZDiV1H6M/7tIrRTwwjrwLw4/iPsEwDkSNg0kucOZdYXSblwJTYdQCgQBNyybq%2bECxJQRxtVfovGLW2r2XYzOL69M8Q1F7VN67NW78fzH1uhKRYaLmlbbbx9h3/c3KkawvVgc26z9AfqI/YtA3BuhBHYhXvP0jxZj/BP1RbqXV1fk2tc1KxngTVKP3wEH2Q22Gs3Q7scEYj9KjTYOYQNd3izxipSKc3KPobJBm%2bb4mf1uOxW1QDWCfVZv1HfOZe9A0iGpz/3wyz3I3WGO8AWnT%2b9Ri9AjcMt3HT4nqptFQC6m3g5AAv4B8n6QhAjngp32cFIhA2oenRJV6/uNgYMwjvRXl8IZR/bFFrfZ4O1XZ08eU31adPrQDyHCWn4pjjmBZtPiOse0xV/BQZgOACJb/CxcUGzq%2bttcvA9VdNcxxMRzsZoIO0gXIIWP7pJd5b03N4ZqAthA2PY1wSOZQjduAke6la2VpWZbn37eNKX/abMgyfL40l9uMpave/LEIHD11g4IZNsbA%2bpF3OD%2bo0Lm13DHL0H1LTUCQCZWlfbVk9K1M/MuIarcq5xcYsCsdI%2bjgmwa0JHOI5woQmVGkda9LkkKo/Yuxg/uiRqH4nah5P%2bTVPrhqP3qd%2bYrq%2bs2YdvcNqDhjVIe8P8HDcaog/tg%2b%2bpVEONq8nVuVphAWiBRuRI/EfQOL%2bZA4MjwhCcoXGVDCZoom/DnJyWaVauas9Wm6/D09ucqfNE7dPN69cw1xzDBmLNHiCsXd5Duxz54SMuQWB%2bqrFGAKhNuQCCxASUEfQgGOU00wVyJoQS/x1wAm99ZuWo3DelzQxzTe1bX47qp5snmquq39Rv%2bPXI/T6sHeuGCbPZJvVIe2B7cB6%2by0/iQKzOgEjXuppsHeODgMiA2ny9vue1zHpvbWatV3hOZ1ca1/o/%2bl5pLm%2b2PjjI9Vo7ythg%2bEbH62rU55QHYKqhsdZA8VZf80Fr%2bD%2bw6dYFB%2bsiH2pTscNV9l9xyWqoRWtRtwAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"925\" alt=\"Grainy Night Vision\" data-srcset=\"/assets/static/night-vision-grainy.82a2fbd.2cd1dc3af9be86c655682d93eded84c4.png 480w, /assets/static/night-vision-grainy.c0f240a.2cd1dc3af9be86c655682d93eded84c4.png 925w\" data-sizes=\"(max-width: 925px) 100vw, 925px\" data-src=\"/assets/static/night-vision-grainy.c0f240a.2cd1dc3af9be86c655682d93eded84c4.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/night-vision-grainy.c0f240a.2cd1dc3af9be86c655682d93eded84c4.png\" width=\"925\" alt=\"Grainy Night Vision\"></noscript></p>\n<h2 id=\"shader-2---grainy-night-vision-alt\"><a href=\"#shader-2---grainy-night-vision-alt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shader 2 - Grainy Night Vision Alt</h2>\n<p>This next shader is similar to the first one but with a different grain and look. The original code for this shader can be found on <a href=\"https://www.shadertoy.com/view/3lcXzl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Shadertoy</a>.</p>\n<p><strong>Note:</strong> This shader has a slight amount of screen flickering so if you're sensitive to it you should set it to zero and definitely be cautious about setting the value too high as it can be intense.</p>\n<p><strong>Shadertoy Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token preprocessor builtin\">#define</span> NOISE <span class=\"token number\">0.2</span>\n<span class=\"token preprocessor builtin\">#define</span> FLICKER <span class=\"token number\">0.02</span>\n<span class=\"token preprocessor builtin\">#define</span> LUMINANCE <span class=\"token number\">0.8</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">mainImage</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> fragColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> fragCoord <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Normalized pixel coordinates (from 0 to 1)</span>\n    <span class=\"token keyword\">vec2</span> uv <span class=\"token operator\">=</span> fragCoord<span class=\"token operator\">/</span>iResolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//scene color</span>\n    <span class=\"token keyword\">vec4</span> color <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>iChannel0<span class=\"token punctuation\">,</span>uv<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.52</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//vigenette</span>\n    <span class=\"token keyword\">float</span> d <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>uv<span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1.3</span> <span class=\"token operator\">-</span> d<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> vignette <span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Luminance</span>\n    color <span class=\"token operator\">=</span> LUMINANCE<span class=\"token operator\">*</span>color<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//simple noise effect</span>\n\t<span class=\"token keyword\">float</span> noise  <span class=\"token operator\">=</span> NOISE<span class=\"token operator\">*</span><span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">,</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80.0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>iTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//apply noise</span>\n    color <span class=\"token operator\">+</span><span class=\"token operator\">=</span> noise<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>vignette<span class=\"token operator\">*</span><span class=\"token number\">2.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//apply vignette</span>\n    color <span class=\"token operator\">*</span><span class=\"token operator\">=</span> vignette<span class=\"token operator\">*</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Screen flicker</span>\n    color <span class=\"token operator\">+</span><span class=\"token operator\">=</span> FLICKER<span class=\"token operator\">*</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>iTime<span class=\"token operator\">*</span><span class=\"token number\">120.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Final output</span>\n    fragColor <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>Godot Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// For Godot we have to specify the shader type. Since this shader goes on a ColorRect node, it's 2D and all 2D shaders are of type `canvas_item`.</span>\nshader_type canvas_item<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// The original shader contains these variables below with `#define` but since we don't have access to that we just declare them as uniforms instead.</span>\n\n<span class=\"token comment\">// The amount of grain to apply to the night vision.</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">float</span> noise <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// The amount that the screen should flicker.</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">float</span> flicker <span class=\"token operator\">=</span> <span class=\"token number\">0.02</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Affects how bright the night vision effect is.</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">float</span> luminance <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// `mainImage` is always `fragment` in Godot and it takes no arguments.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">fragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Shadertoy has an `iResolution` global variable but we don't have access to that in Godot. The Godot docs recommend either using the following definition below or passing it in manually.</span>\n\t<span class=\"token keyword\">vec2</span> i_resolution <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> SCREEN_PIXEL_SIZE<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Normalized pixel coordinates (from 0 to 1)</span>\n    <span class=\"token comment\">// `fragCoord` is `FRAGCOORD` in Godot.</span>\n\t<span class=\"token keyword\">vec2</span> uv <span class=\"token operator\">=</span> FRAGCOORD<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// scene color</span>\n    <span class=\"token comment\">// Instead of `iChannel0` we have `TEXTURE` and `SCREEN_TEXTURE` available to us and since we want this to be a screen shader we use `SCREEN_TEXTURE`.</span>\n\t<span class=\"token keyword\">vec4</span> color <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// vigenette</span>\n\t<span class=\"token keyword\">float</span> d <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>uv <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// float c = 1.3 - d;</span>\n\t<span class=\"token keyword\">float</span> vignette <span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Luminance</span>\n\tcolor <span class=\"token operator\">=</span> luminance <span class=\"token operator\">*</span> color<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// simple noise effect</span>\n    <span class=\"token comment\">// Instead of `iTime` we use the global `TIME`.</span>\n\t<span class=\"token keyword\">float</span> noise_2 <span class=\"token operator\">=</span> noise <span class=\"token operator\">*</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>TIME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// apply noise</span>\n\tcolor <span class=\"token operator\">+</span><span class=\"token operator\">=</span> noise_2 <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>vignette <span class=\"token operator\">*</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// apply vignette</span>\n\tcolor <span class=\"token operator\">*</span><span class=\"token operator\">=</span> vignette <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Screen flicker</span>\n\tcolor <span class=\"token operator\">+</span><span class=\"token operator\">=</span> flicker <span class=\"token operator\">*</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>TIME <span class=\"token operator\">*</span> <span class=\"token number\">120.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// Final output</span>\n    <span class=\"token comment\">// `fragColor` is `COLOR` in Godot.</span>\n\tCOLOR <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>An image of the effect can be seen below and a short gif of it can be found on Gyfcat <a href=\"https://gfycat.com/tintedfittingimpala\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 941 461' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-f2ea75678e9d73c3a0de0f7bb6223ca9'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-f2ea75678e9d73c3a0de0f7bb6223ca9)' width='941' height='461' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAfCAYAAABXscv8AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAKUElEQVRYw6VZ%2bW8bxxXmn9FYIkUdpihKtCweuixSvCTFku1EpKjTFilRpLikLtuJDRtpjTiwI8uye6BF0P6Qoih6IU1l%2boiTtkCB/mOv783O7M7MLu0A/eFhZ2Z33rzve9%2bbGUqe6osnUGs9AXpWxRNtR%2brvnPG%2baPO%2bsMqZ2q5o7805x5bvqrxeS1qfj9G3FTTT37Hl0/J95lxXie%2bFhIOvW2up%2bMSYZ/clNl5wa9nmmNRSCZFJUsC%2b0ALQA5QW10mvus07c/evrOMK7sTRlvEJ89SRACJht0XPE7ONz1rLHNcn6MHrJFn9lst7ERD37yCg5VShmk21X9Xj4n6F2Xh4n2Miq%2bM7wu4xsGG8wg6%2brIuPpI/pQ1KHPGY7OnFlVSbq/7F3%2bXBLjhqbDNaOX%2bBkmImABjYar09g7/tnsPf2GTTRGm9O2QcGn8wmcTLMiScWg3XOcl1iWzVpXCLOQaiVsRP1fUv1Ja9Xf2V%2bJ%2bISoES8Iv7G66cMG2HcR2u%2beQoMN5pn77unYJx9CfnHdVj5%2bSGUvr4P1b8%2bhMbLY5x0yibuM3JOGVHmQk%2bY1V/aC5mEcVNIkoMzA2RtB5FPlHlijmVirrSGIa0vEkngWDIFWAS/%2b%2b0jqPzpAVz/7R3EacDGV5/CPuEhBRxQ4%2bwxzOwtQ2rnY0hVF2Fmfxkuf3odrv5sG4qn%2b3Djd3eZAyJq/7tT5vjwn89NYnDBJi382gyInFJbMCwCa0hjApT8Tu5bgF6p8xps3PTffIOqxVgOfnjGzASLJfnNF7D1h89g4ze3GdiFeyWYu7kGGaMA6d08JLeuwdJxA44ofvThOfoes9z6EmaP6KMlyCER2UaRfZyukS0yo7G5m%2btw5X6ZObj%2b1SdQ%2beNPwfjHIzhAFR1iAOSUjEilsYO3T81nG9vnJvfZnLfOd8z/v0z/hxQzElH72%2bdQ/voerP3yCBYf1mD%2bzg2YOViBTB3BVhdZ/BnEwXA1iyyxNLb8dA9uoa9D9Ou5/QMG%2bxIJOFy1CcCPsw1zEvVzvM8c10zH06gW6tOCC3c3ofCoDhu/vgXbv78Pxt%2b/gEbrGIwXx9Aga9lmtOnr47I1MUG1vzyAEipx9fkBfPSgAh/eWkdAKywWUi5LFgdLyWIxN82nZaRyJGbldA8%2b%2bfdzuPkWFXD3P7%2bA29iYO1qFLGdKAGagDfspO1JJMdVCzrP1PGT3VyFQr0BPrQJ9uxU4X9%2bBXmz38r5o22M76rtds03Ws1uFSGMTZppLzD9lNkVJ2C3YSWKxiJiLStxZCUtur8h8rD3fh3v//RXcQRI8R99%2bDs0/fwazJB2jwB0UGRn0tBxZzotSXxqXiJmuF8FX2oRzmyXoLJWggz3L7CmbGBPfKO/QvDj%2bwWYZhiqYbQFGyiiLTcQntzkBDI9hxygIKD7ehZtnD%2bHgmwfgSeYvQbKQwEzm2wPjDNvKKCrfCHWwb3EsZRShq4wgymXwovm2yLZYm8CaVuZ98%2bm1vt1Snp1b23Chep0pINNYclWmleGmnTgHDkFSE/eB0jwkFxF3fgo80WwMYrOjrH5yUu1nDGfG2y4qyU8Q4N%2byCRAmwPqUMZMQNxJIAR3lLQjvbKDfgmPdjKET4qZO1Uill9ZmIZKOQDQXA0946iIMp6Jst5Q3P9WpBrLpspCYqymAwDCAItMlF6A6UZubDHxXmUqkzAggBej1bZP/DuCGk4CJ5RwMTl6AcGIEPMGxMAxOjSgKcJWPlnldWjkXAqiWGSgCum1aJ8%2b6DJ6U0SmRc65SYdaxswM/2d5BAsw9IGPtSwWr7FQy3qMEmoMnx3hxBoKjYRiYGAZPfzwMoUucADoCjSWHU7nWFTY1%2bWf4WLqxbCoAAfsQlG/tOviW18G3sgHeGyVGiF77BL6Tq2VoYR7GUgmIZlLQly/AUO2GpAB7k84YepaL7eufn1h0bI8t5SAQGzIJoEZw4iI7xn6UpBrOupOJYgqoL0FXBYFnr0L3QBJ6yAIJtCnwhxJIxpqpCq3%2bO1D6YxOjsNDjg/k%2bP8z3%2bmCu1w%2bJ%2bTRk2QVtSSlD%2bcjOGPZRndUTKO8deBkaK%2bTgfHQQ%2bkcvgOc8EtA/Psxve/bx4dgE%2bTEjHz2OkjEEAVgCeH5742nwd1wAf0%2bUWVd3BLp8F8GbX4FOlDft8GRExrlqDQYw83NdHTAT7IOZ/l72nA30wCySkV2/jPcLUmhBybYqfVkRRatc5FipBEgBRECACAjEwooC9ItP291UY1fOQAovKb03VsEXSzLAvp4I%2bLqFjYD/yjXwr6%2bAfwWJQuteXQbfxhpER2OQ6fZC%2bnwPZJh1QwYJSHd5ITM7ARkMPms45a2fCFktefI7KoHRfBb6IpICTAIWnZJxk7hyF7C/J6ZpDyE/w5enIJSOQ89gFLy%2bEQba5%2beG/f7xGAzg%2b4FpfKbiEEILpkchPhiABIJN9nZBsocbthNdnZCIDplloNW%2bm8yV00ojZvZg1VKARkBeuTZm3sFiRrsy0%2bZC4KdKVyCUHYP%2bqSgCjEHvcBR8XSh7PzdUQHcwAgNJBI2AGQHciIAwxjLeeQ4m/T5uXpjs9sElbweMhPthZDFtgXZm3KVktfKkJNHvB9oDSAEBmQB2j9fBGs6zVN4DxFWTfmVNrH9oAklGIUhP1o5B/0QcAvEYBMbQJs3xUGaUZV58Z5IQZ2PhUB9Ez30AMSQi3tkBsY4PIIJEDOJJFUhEITw3yX78EOGivtVrcNG6l8hHooiblUABS2AkpBJAx6AOMNcotj1aKOviYhHDmurH4AQIAk5PZmnTgikuexl4Su2zMVIGZjuEChhE6Q/iHjCA4GmcSoXWGUSVkdpy/GTIyJtzuw2aJ0zeAwJ4BfD0RcUpIJdA0SFzt02QSLu4kEDJR8zM8iCJCCuzKZUUU/pa9tn7qEUKlQN7T6SiWoLcp%2byLbGxllqkv%2b57fCHLSqASYAgQBTAHjfA94x46fk6REzCe3P4KhmQnMSMQMTIBOxVVrl%2b2kvQHK3%2bnEyab45%2bUW/TitSL5dwqzLHbsHSKeAfAy6M6c6IcYnNy47pS4FJvf7KbP8uyCvdZ2okPQMCZVIZIm%2bogLugxJwAU8d6yKn7U/6ZkkEkAKse0AfNtgmyC9CysXCEJcb%2b7f%2baDFn794uGbJkbGXTWfPvza5WRo7MoxGxoqRoXxjKjUNi6yqTuHWRc0mmRYB%2bCpgKKDrZs46dAkSupczNrg1oRcY6kPcAD7YjNBlTjkulrKbtfUWsO4E3xpx2bZZ/PzACxCYoCBiYGLGPQf1mh87o7390/AjwjixzoCElaHeQbuZGhMiy7J8AK2tIJSPKhGIcxYuO%2bEMObXwZ6RpPeOKLGYmAqP1bwGbOvmJe2lxg53YwGX1npvR%2bKO2%2bL7jNt2s89uNLpM17WpdijVybhnQ9z/4MJv%2b6ZadAXtoDGAFjw%2bxywViiP3LiXZ6e4ytz1pHDZJbUsjvNJZ6Uaj0Za5/p6bj6nWTinexT9qevJR%2bHsk/RpqOZTin6P4CFix/1rARGBuE8HgD/A/u/ycZQ9P34AAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"941\" alt=\"Grainy Night Vision Alt\" data-srcset=\"/assets/static/night-vision-grainy-alt.82a2fbd.c24bf864bb567a555e6697a360463023.png 480w, /assets/static/night-vision-grainy-alt.01a6ba0.c24bf864bb567a555e6697a360463023.png 941w\" data-sizes=\"(max-width: 941px) 100vw, 941px\" data-src=\"/assets/static/night-vision-grainy-alt.01a6ba0.c24bf864bb567a555e6697a360463023.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/night-vision-grainy-alt.01a6ba0.c24bf864bb567a555e6697a360463023.png\" width=\"941\" alt=\"Grainy Night Vision Alt\"></noscript></p>\n<h2 id=\"shader-3---blur-night-vision\"><a href=\"#shader-3---blur-night-vision\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shader 3 - Blur Night Vision</h2>\n<p>This next shader includes a blurred line that goes down the screen to simulate an effect whose name I can't really pinpoint. The original code for this shader can be found on <a href=\"https://www.shadertoy.com/view/Xsf3RN\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Shadertoy</a>.</p>\n<p>You're going to notice a big chunk missing in the ported code and that's because Godot doesn't yet have support for structs in shaders so we can't use the circles in the effect.</p>\n<p><strong>Shadertoy Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">//utility</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">remap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> inputMin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> inputMax<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> outputMin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> outputMax<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">-</span> inputMin<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>outputMax <span class=\"token operator\">-</span> outputMin<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>inputMax <span class=\"token operator\">-</span> inputMin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> outputMin<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> time<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> \n     <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">12.9898</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78.233</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> <span class=\"token number\">43758.5453</span> <span class=\"token operator\">+</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">struct</span> Circle\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">vec2</span> center<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">vec4</span> <span class=\"token function\">circle_mask_color</span><span class=\"token punctuation\">(</span>Circle circle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> position<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> d <span class=\"token operator\">=</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>circle<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">></span> circle<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">float</span> distanceFromCircle <span class=\"token operator\">=</span> circle<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">-</span> d<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> intencity <span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t\t\t\t    <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> \n\t\t\t\t\t\t\t\t    <span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t\t\t\t\t    <span class=\"token function\">remap</span><span class=\"token punctuation\">(</span>distanceFromCircle<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t    <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t    <span class=\"token number\">1.0</span>\n\t\t\t\t\t\t\t\t    <span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>intencity<span class=\"token punctuation\">,</span> intencity<span class=\"token punctuation\">,</span> intencity<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">vec4</span> <span class=\"token function\">mask_blend</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec4</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec4</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">vec4</span> one <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> one <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>one <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>one <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">4.0</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token keyword\">void</span> <span class=\"token function\">mainImage</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> fragColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> fragCoord <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">vec2</span> uv <span class=\"token operator\">=</span> fragCoord<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> iResolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> wide <span class=\"token operator\">=</span> iResolution<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> iResolution<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> high <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">vec2</span> position <span class=\"token operator\">=</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> wide<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tCircle circle_a <span class=\"token operator\">=</span> <span class=\"token function\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tCircle circle_b <span class=\"token operator\">=</span> <span class=\"token function\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>wide <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> mask_a <span class=\"token operator\">=</span> <span class=\"token function\">circle_mask_color</span><span class=\"token punctuation\">(</span>circle_a<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> mask_b <span class=\"token operator\">=</span> <span class=\"token function\">circle_mask_color</span><span class=\"token punctuation\">(</span>circle_b<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> mask <span class=\"token operator\">=</span> <span class=\"token function\">mask_blend</span><span class=\"token punctuation\">(</span>mask_a<span class=\"token punctuation\">,</span> mask_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> greenness <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> coloring <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> greenness<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> greenness<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> noise <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span>uv <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> iTime <span class=\"token operator\">*</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> noiseColor <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> noise<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> noising <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>noiseColor<span class=\"token punctuation\">,</span> noiseColor<span class=\"token punctuation\">,</span> noiseColor<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> warpLine <span class=\"token operator\">=</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>iTime <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">/** debug\n\tif(abs(uv.y - warpLine) &lt; 0.003)\n\t{\n\t\tfragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\t\treturn;\n\t}\n    */</span>\n\t\n\t<span class=\"token keyword\">float</span> warpLen <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> warpArg01 <span class=\"token operator\">=</span> <span class=\"token function\">remap</span><span class=\"token punctuation\">(</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> warpLine<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> warpLen <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> warpLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> warpLen<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> offset <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>warpArg01 <span class=\"token operator\">*</span> <span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>warpArg01<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\n\t<span class=\"token keyword\">vec4</span> lineNoise <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>iTime <span class=\"token operator\">*</span> <span class=\"token number\">19.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0005</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tlineNoise <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">vec4</span> base <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>iChannel0<span class=\"token punctuation\">,</span> uv <span class=\"token operator\">+</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>offset <span class=\"token operator\">*</span> <span class=\"token number\">0.02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfragColor <span class=\"token operator\">=</span> base <span class=\"token operator\">*</span> mask <span class=\"token operator\">*</span> coloring <span class=\"token operator\">*</span> noising <span class=\"token operator\">*</span> lineNoise<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>Godot Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// For Godot we have to specify the shader type. Since this shader goes on a ColorRect node, it's 2D and all 2D shaders are of type `canvas_item`.</span>\nshader_type canvas_item<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">remap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> inputMin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> inputMax<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> outputMin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> outputMax<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">-</span> inputMin<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>outputMax <span class=\"token operator\">-</span> outputMin<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>inputMax <span class=\"token operator\">-</span> inputMin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> outputMin<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> time<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">12.9898</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78.233</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> <span class=\"token number\">43758.5453</span> <span class=\"token operator\">+</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">vec4</span> <span class=\"token function\">mask_blend</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec4</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec4</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">vec4</span> one <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> one <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>one <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>one <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">4.0</span> <span class=\"token operator\">*</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// `mainImage` is always `fragment` in Godot and it takes no arguments.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">fragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Shadertoy has an `iResolution` global variable but we don't have access to that in Godot. The Godot docs recommend either using the following definition below or passing it in manually.</span>\n\t<span class=\"token keyword\">vec2</span> iResolution <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> SCREEN_PIXEL_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// `fragCoord` is `FRAGCOORD` in Godot.</span>\n\t<span class=\"token keyword\">vec2</span> uv <span class=\"token operator\">=</span> FRAGCOORD<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> iResolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> wide <span class=\"token operator\">=</span> iResolution<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> iResolution<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> high <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">vec2</span> position <span class=\"token operator\">=</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> wide<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> greenness <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> coloring <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> greenness<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> greenness<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// Instead of `iTime` we use the global `TIME`.</span>\n\t<span class=\"token keyword\">float</span> noise <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span>uv <span class=\"token operator\">*</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TIME <span class=\"token operator\">*</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> noiseColor <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> noise<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> noising <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>noiseColor<span class=\"token punctuation\">,</span> noiseColor<span class=\"token punctuation\">,</span> noiseColor<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> warpLine <span class=\"token operator\">=</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>TIME <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> warpLen <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> warpArg01 <span class=\"token operator\">=</span> <span class=\"token function\">remap</span><span class=\"token punctuation\">(</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> warpLine<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> warpLen <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> warpLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> warpLen<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> offset <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>warpArg01 <span class=\"token operator\">*</span> <span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span>warpArg01<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">vec4</span> lineNoise <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> <span class=\"token function\">fract</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>TIME <span class=\"token operator\">*</span> <span class=\"token number\">19.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0005</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tlineNoise <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n    <span class=\"token comment\">// Instead of `iChannel0` we have `TEXTURE` and `SCREEN_TEXTURE` available to us and since we want this to be a screen shader we use `SCREEN_TEXTURE`.</span>\n\t<span class=\"token keyword\">vec4</span> base <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> uv <span class=\"token operator\">+</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>offset <span class=\"token operator\">*</span> <span class=\"token number\">0.02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tCOLOR <span class=\"token operator\">=</span> base <span class=\"token operator\">*</span> coloring <span class=\"token operator\">*</span> noising <span class=\"token operator\">*</span> lineNoise<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>As mentioned above in this port we had to scrap the two circles like looked like binoculars because structs don't yet exist in Godot. The rest is pretty much the same as the others where its just globals that are named differently.</p>\n<p>An image of the effect can be seen below and a short gif of it can be found on Gyfcat <a href=\"https://gfycat.com/afraidpleasedfanworms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 988 478' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-1da4896428ff96395b084d0c9f7634e2'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-1da4896428ff96395b084d0c9f7634e2)' width='988' height='478' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAfCAYAAABXscv8AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAKl0lEQVRYw5VY6VNb1xXXlzYmLAIbC7EakMQOshHwEAITL9gIMMQBBNhmETI7CPA6Tt3JJK3AW9J2mqQznU6nM21n0sVuZvKh05l%2baae1je04tpu0mem0H9s/49dz7tuupCdBP/y499133znn9zvnLsI2/XgLMwRupx/FRDvF7SO1neJWjJmYfBhT8UiHOma808f4e%2bNb1fbMzhbCT7bJZwxh0d8S7Ywehx6D5HNSA49NGs8xMw7h2/Q/JT3rfmV%2bMzvbRt82IzmfSTORBZnWg3qoEXusi6Q%2bJwajBzCl29Wg%2bompPndU8PN0wrwkX7LPh7E4%2b7K/ODsJAjAnk28MNpGFx2oWDDyRJmkiWIkzJYsjOderRvQfJhMzEUsOMk6AWFxfhhjfSf7GSKjUMp84fhpmadw2Kzrqw%2bxTAj9rL3UxhECGkW01Y5ooM5Lj5GC21SAfJWZfyrxs55G1IIZtsTRjhh0zSRpRmSzz0aCTndWJa4gQX9tF%2bsOIkAiiZUiTDIGe6ga3LNXU17G8nsM7ZibixvUKk6tNEkL%2bPrxjQdIYj4nk6OTURCbEzaB5DOao87yotbb5Z9uY08CDC1/cxuKru1h4eQfz1J/7/JYYj%2byQkR3NyI5qaFZv42BWUVgKJK709L4evB70023DTnjHwq70LPuXY5L7HPvCizuCz%2bLLu4LbHPmYe7olME/vbYufb2Ph2RaWX93BxKdXcWJrAoM/XkDoN5uY%2buNNRB5%2bBwvPb2FJGLkjjMzTsy6YAVFJWyp0pY2qMqvLqDKt6gxIY3pFMhHDbkLmjD4TpVjmn1PimCzFuPQ3JnsLs399T3AI3b%2bEwZ8s4kRsHGMPLmOZ3xPnRZpjW35B5J5vY/XLuwj9ah3NkeNoWz6NtpVeKNE%2bdN04i5MkSv9HEYx%2bso4Lv7%2bByF/exdKL20I0NsZYYnFIzHkyPM8KP4kJlWWRVPW3jXH5fVz/WfwckS0d9G6RfbNf9k/gWCJEdvIPb4sYBz6OiERy7Mpa0OBzJHwcI79cw9rf7wnOy/SdbZUEYKzT4PivN9BKkzsuDaB9vZ/QB2U1iNal02hdPCXattVedF4bwrF3Qwj%2bYAbDP1/F%2bc%2buYfZP7wijKxTQ2lf3CHex/tUdsqu20S8TwO9ojvys99VvtO95nPpsc%2bXVbeEj8ud3hM%2bRX6yhj2I4/l4IndeHRGwiVsayGitzYC7%2bzQG0EIcQCbTx9ftY/WIbay%2bpAqIvtsG49I97OPfbDTHJv9Gvfah%2b3L6hQReFVGUHrUunxHxWuOPyGXTfHMbpuxfw1k8XEXpwBYO/extDhMH7N6hPeJAG/P5%2b8vgZwuj9Kxj%2b2RJ6359E97eHEbgyKDLastCjEiVwTGp8/SJ%2bvx5vVOXh3%2byHb74H459EcelrStDzmOBtu/6v7%2bEa4Vv/%2bRBTn12Fj4waH0b7JCESnzUnGni5cFCsvrLYg6q5fnxzcgwZU6PYN0mY0hHSoI%2bH4se4nVaf%2bdtvkA0P2VIWT6JlyVyacUnRExZNhmIIMCAEmPz0Mm7%2b9yNc%2b%2bcHuP7v78M28uEFjPzwPEIfTyIYG6WyCVoaU6zEiCYKowYT2OxD3eoQXp%2bdQHZkHFmzYxrGVUTGzf6s9D4iP4%2bLbzPIRu3KEDo3%2b4wMx/lMJJ1ijJPF3Hq/O4KxH00JzgxbzRseMKo7K9F01gf/pTPxmY6mcbKeXCUKoWM9iLrlQWSEZfJjCUKYz5mJ42Gzvy88gZrlIQTIppIqrnRj63oCg/DTMvUOt6AqUAGdt60y4IGr04MKpRJ1gz7aAM%2bo6ykV4VSiSJUiBFghAWbGNYLjyAyrRAXCY%2bZzOAFiLEQihJAtC7ChVWGqSozuIgBx4n2q/s0WlBNX5szcbSXN5SjxVaCoqQxVwcNiUpwAqcotTl1ziRgC6BXApGYkgjOhePK6OBqytLGMi%2beQeXEC%2b0jEGrJlWQHraZZBwrguQHV/MwobSwVn5m4r9B4Cw1FXAs/pw2YFrPclI7r7mhMCULnVsgC0fjPnCQtEZo7ai%2bNqn4glVYTWz5g7h5zJYRwcDmL/%2bCBeIxvVK28iEO01BYhK1RDdPUH6ycUCeIJH4Kgths7bVtBYhoLGQzhYUwzXKW9yBaRzmqIajAqYHkNOz2nk%2brqR29SJ3MYA7N5OZA0OmCJImWfyJb1H4S914GhhHrqKD6C%2bsRoNc2Rzsy85rmhCXGkqwhCg9zDyq4vhbDqEgoYy2Bz0hzv5iQKk2u132RDVCugVO3fGxDDsB6thz6qE3e6GPdcD%2b2tlyPb5kbl4QV0O2hLgks8f7kPAYUcXIVC0H50kwtG8THRQsEp091JPd1LpAripyvOrisCJdwgB6ktF5wANVhxvVJdANJh%2bh5WMJo/3o/PygHoMTpxFTmEVsvMqkb3fhex8N7IzDyGLBaAlkTU1gqyZUdHumz%2bP8kAz/Hmvo61wP9oLctHuzIPCyMuCMh6AwjdUC59K0nPyHsaxBugGW9XXLLgyZ0e9EKAMB%2btKUXikgu7Kx8QtK23GExwrslP6hm%2bGtcPtKDvpRV5NLbLsRDzXhRwWIM8Fu8MFR0sNnN2NKOhqUHG0AcVtNWhy5KLFnglffo5Ay0E7fPuz0VxZAIUuaP6rg%2bYtVSKq%2b04dZ1B8x/ych8utBXB6y1FxrAENY4GEsgruKkS7djPj3xB8NS3v8cLZSkQb3TjgdgvS2SyEvRI5B1w44HLB6XOjqN2NQoXQ7kGxrxIVtDl5KhxoINJNlPWm/VnwkiBeqoYmSlDdgA9NU93GbVBJQ9iqYvnqXD/qR1lnreBsCKAvg/LuejRSqVkapRKSSz4p82ycvq0aakUZCVnYXoWiAKGjCg6vh9YdocZNjj0kjIeIV6HQXyXmCfir4eyoRomnEJ6sDFRn7kMNtySAm/aC8nIH7drlcJMIaZdgyg2yX/xmaAh1oCxQkywAnwTeyW4EqMz2YlgXhUuLfzGWvlGPghYXClrdcLZ5TGIaURZCIKAijryGIq4E2oxLiHApVUBpdgaKSRBnZ40Ai1R%2bsgkNE53ahtdvbNhKOvLaXE5SYXOltARKU22CKXb/9fjM8y8sLsdK2lmZdBEFKIhZkLOE1TzKDleCk4UkQc13qqjONrcQuoJOLF5uHEPKhMlLmZIUuDpE94DmRAHU44DPRlePeQwqu2Se13vz3Ak18xRs0V5J7yaA/I6ESBwrEqgWPkuP1qE5ckLEki5mfb/Qj8E0AjTF/xZI9cuKflo2Xuiikq4WGRGZlwP370LWn4a0f29CsU/VdxUaz3WJmPTkWB6NnLQrlgKUmgLQ%2brL8LaCXvvY/gJphRTjnsowj//8S8e%2bhCtKJpo1xLNVvKcYRKW/YiiQAH/HxApQlCCAqYCBpTbERVpjXkYsuElx%2bScHvhZw/4Z1/l3ep3lv44Zgqe4%2bIf4OJjTmRg6gASwHS7wH6Ts//KTp0vMFc73staStSViT9exQqhX1ejhxb2bF6%2bOZOqom0%2bDWYfgkk7gFa5r3T3Sjm3bnNYrPzp1nL/j1UxF7ntacRzW%2bKwKcRx%2bqlC5Oo2rQCJC2B%2bArgzPPlxqnwxUU65tKVZbospyLh3%2bO41XuLzVHsCxRv3ViHui9ox6CVAP8DUf1y4c1JGWEAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"988\" alt=\"Blur Line Night Vision\" data-srcset=\"/assets/static/night-vision-blur-line.82a2fbd.92044a4eb1568034cc8410b8f87d6415.png 480w, /assets/static/night-vision-blur-line.0411d07.92044a4eb1568034cc8410b8f87d6415.png 988w\" data-sizes=\"(max-width: 988px) 100vw, 988px\" data-src=\"/assets/static/night-vision-blur-line.0411d07.92044a4eb1568034cc8410b8f87d6415.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/night-vision-blur-line.0411d07.92044a4eb1568034cc8410b8f87d6415.png\" width=\"988\" alt=\"Blur Line Night Vision\"></noscript></p>\n<h2 id=\"shader-4---scanlines-night-vision\"><a href=\"#shader-4---scanlines-night-vision\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shader 4 - Scanlines Night Vision</h2>\n<p>This shader differs from the one before it by offering a crisp night vision effect with horizontal lines going across the screen. The original code for this shader can be found on <a href=\"https://www.shadertoy.com/view/XlsGzs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Shadertoy</a>.</p>\n<p><strong>Shadertoy Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token keyword\">void</span> <span class=\"token function\">mainImage</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">out</span> <span class=\"token keyword\">vec4</span> fragColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">vec2</span> fragCoord <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">vec4</span> color<span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token keyword\">vec2</span> uv <span class=\"token operator\">=</span> fragCoord<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> iResolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">float</span> distanceFromCenter <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span> uv <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">float</span> vignetteAmount<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">float</span> lum<span class=\"token punctuation\">;</span>\n    \n    vignetteAmount <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> distanceFromCenter<span class=\"token punctuation\">;</span>\n    vignetteAmount <span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> vignetteAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    color <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span> iChannel0<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// luminance hack, responses to red channel most</span>\n    lum <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    color<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> lum<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// scanlines</span>\n    color <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token operator\">*</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>iResolution<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// screen flicker</span>\n    color <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">0.005</span> <span class=\"token operator\">*</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>iTime<span class=\"token operator\">*</span><span class=\"token number\">16.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// vignetting</span>\n    color <span class=\"token operator\">*</span><span class=\"token operator\">=</span>  vignetteAmount<span class=\"token operator\">*</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    \n\tfragColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>Godot Shader</strong></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// For Godot we have to specify the shader type. Since this shader goes on a ColorRect node, it's 2D and all 2D shaders are of type `canvas_item`.</span>\nshader_type canvas_item<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// `mainImage` is always `fragment` in Godot and it takes no arguments.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">fragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Shadertoy has an `iResolution` global variable but we don't have access to that in Godot. The Godot docs recommend either using the following definition below or passing it in manually.</span>\n\t<span class=\"token keyword\">vec2</span> i_resolution <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> SCREEN_PIXEL_SIZE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> color<span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// `fragCoord` is `FRAGCOORD` in Godot.</span>\n\t<span class=\"token keyword\">vec2</span> uv <span class=\"token operator\">=</span> FRAGCOORD<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> distanceFromCenter <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>uv <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> vignetteAmount<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> lum<span class=\"token punctuation\">;</span>\n\t\n\tvignetteAmount <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\n\tvignetteAmount <span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> vignetteAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// Instead of `iChannel0` we have `TEXTURE` and `SCREEN_TEXTURE` available to us and since we want this to be a screen shader we use `SCREEN_TEXTURE`.</span>\n\tcolor <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// luminance hack, responses to red channel most</span>\n\tlum <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tcolor<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">=</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> lum<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// scanlines</span>\n\tcolor <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">*</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> i_resolution<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// screen flicker</span>\n    <span class=\"token comment\">// Instead of `iTime` we use the global `TIME`.</span>\n\tcolor <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">0.005</span> <span class=\"token operator\">*</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>TIME <span class=\"token operator\">*</span> <span class=\"token number\">16.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// vignetting</span>\n\tcolor <span class=\"token operator\">*</span><span class=\"token operator\">=</span>  vignetteAmount <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">// `fragColor` is `COLOR` in Godot.</span>\n\tCOLOR <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>This one is pretty simple and nothing new to go over. Just like with the others we have the same shader type since they're all going to be on a 2D node and most of the changes are just different names which are nicely documented in the official Godot documentation.</p>\n<p>An image of the effect can be seen below and a short gif of it can be found on Gyfcat <a href=\"https://gfycat.com/shamefulhauntingjavalina\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 976 422' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-80225f1d54388012695371f5a1953300'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-80225f1d54388012695371f5a1953300)' width='976' height='422' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAcCAYAAADRJblSAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAHe0lEQVRYw9WY2W8jWRXGLTGT2HGaJHbirewsjuOlvKaz2I4TJ17STtKxs/aWpBPH6WwMAiEkEOIJJITgASEkECPEjEAwLD29TLrTDEgI8Zd9c86tqsTO2m33TMPDT%2bXyrbr3nO9%2b59at0t1%2bugtm7sk1fLqL2at4fJ6ZM9T7fw1XxMAxXpeHlq%2bGbv7ZHuaf76P04hDFowMUP9vH/NM93OaLT9irYa6aT69mVuWi/862zV5y/YVUxVAb324NnAvnVHpxIHIU%2baoUCV3pxT7m/l5B%2bhfLyP9%2bHbN/KVPjLhaODwSllyQKXTP/fO%2bcem/K3Jnfc5e01QXFzDFyPhyzFv88tc1%2bUkb%2bdw8w%2bcsVEmUHpSO67jMF3dKrA8z%2beQuBh6OC0G4Kg9/OYPSHBUz8fBH5Dx9g5k9bKFJHi8eHCq8OsUCDlEjZ4nNV0aenqharVG6EYnV/T6vG4ESP9kUMHAvHxL/nnzwSseZ%2bex/jP1vAyA8KiH1rCqFHKfjXRxCsjGH%2bcQWLLBCJsEBi6ZY/P8Dtv25RYxJyOQF5KyGE4Bv8G8wogjtJxL6ZxvD3p5H6aRHZ39zFzB8fkig7NPgBlv5B/POQjhwIBfZiTyCUbgCtH%2b6T%2b176/FCMtXhMjqSZLPxhA9lf30HqJ/MY/l4e0Q/SIg%2bOWcROOXAuWl6Rg3GKuUJ9UH/HewLd6r%2bo9v9WRnA7KS4SFzN8zpSTVaKowqyNiP8jBxMY%2bm4OYz%2b%2bjcyvVlH4eB3FJzTA8f7lvLyEK%2b4p0qwVPlrDFFk4%2baM53PxOFpH9cREnxyJiWmcHx5UctNi3kyf5BDbjCNM9C892sEqTvvJqHyskhO7%2bfz/A4rPtUwdcQnA7IUTS0DoNbJyKEtiKI7o/hp7NPMx3ZtB1t0DM1ElB9OEu5xDZGxNjacmKcqVzJa5kFZfHztezA5aPH%2bHef76Bu/8%2bFOjuHO%2bg%2bMn6eQe8ASei0P2hchzmuQm8N55B0%2bQUmtKZ%2bqB7v0Z9WEvjCJZrk60nRuGAvRQWH29i9eUOVo62sXpUgc6/4EVgOVBXpxcRriRgWUhDn82hJZ9tiGbqw7E8gVDl7cQmk0MDS374FylnZskLnTQqoXuiVzRqi0W9BNgB23F0FdNomsrCkM2SEPVhyGWpjxzsSxOiz0bi0pzN5epKdUOKS3AmnAKdNWqHI9Fdt/3POyAOSymN5oySBItQQ%2b4ashlBSy6DZhLRwQJU4g3HxaXDAthHXLDG7LANOgQ6k98C600n5M237wAxmzkmp3L9zL%2bfm0YTk5/Ge5lp2BfHRZ%2bBhh2QFAtoV9QBc8AKc9AGs2yDrsNrgWXQ%2bSU4gNYAntH0JFpSEwq0sF3oiqwiEh%2btqQh64v1wJb1oG6cZW5l8aw7gvUFn2AGTzwITicDo2j1d6IxKb3cNWJhEcyKFVtcAWh0etNr6CTdarb0w3ByBPk9uyGRoxjWU2e8d7sFgSI9YpAWDEQPCQSMGbvkgV5KNrwHbigPMQTvaByzgiWdIAAvZwnkqQEOrrCKAZZlW8OEkjO1WtHRKaDE7lCOdGyKD0N%2b6pZZEnhyRQ9M0PfNTNxGR9QhGvo6QRvgGwiEj5HsxEmGscQcIARzoYAF8VhKAHNDWTw6ISGIT06gDhAD8GJwdhSEaRUuHDQZKnmERDHRulGUY0wkYU6MwksVbUyMwTCQhRV0IePXwB1oRCBgV5Fb4PXoECh7IOyllnWrQASaZHECuZxcwogQUBzQ282KDQjsuV86PzphECkuUMM%2b8krwQoN2BNrck2ll0Lj0%2bmml8p78DAx4DBrxGeBmfwkC/Hp4RGwkwpuz0thp3gFICZxxQ71OAd1jaC4gt1Y8OGsAcc6FDdsJooaRNlLxJEaLVQfYLOilhF0wq5ohTHLtoRe5xNaOvVw93n4YB7p4mWH1m2Ce9Yq8vHmf1OKF86oC2ix0Qr6/maWa894ZgGemFKcyz6xIJsgjmCCUZVAkr/9W0a4jzbli8nZDsTXASLolwvA9H3w1yilP0bU244XswLMZ803hfzwFvqCrPvLsUEUlwgCKRqLOWmEr0ekzcj7cLZucNmCUjzO4OmFSHCNeESODBbvQvx8S7fb0OaG/IAVvxkzfD7oIsAuTgOmNnZlWb2Wpi18DXUIKCmOv0GK12jyJW71yo5htGww54nboS9c41SLXoSA%2bgIyRVJej8ilDG4rGljO9kAb42fv520NAaQO1ce777w7DG%2b07r/R3BY3NJ2Mb61c9dyStzCJ7bCFmVjVCNA8pX1fsY%2bpeiogZFvce%2bylm/BFWErqEeeFYH1XUhfq0DXn8NUG9kdXtmg%2bKRxQO/y5m/yAkiLjr2FcPi%2b%2bW5dWHrdR1QrdimurkhYaQpr1rvzjP17nrH1K4L7ExX3q8mnjz/FFircoBXdUDbycvQmZqhWffRDbakW9is9pn9P0ZVTByrfdyjfM2u%2bs6pvQ0qDlAFYAeYPFZYaMMSWBuFvE7v3YT8MAHvyhCsQ73oDNEujTYpXdH/EyhWc8gJ2yhtmu4OQ96gnNYopw1aA%2b4NozMowTRgo/2Gwhdfmg7mIdTRhQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"976\" alt=\"Scanlines Night Vision\" data-srcset=\"/assets/static/night-vision-scanlines.82a2fbd.11a84ab2f67dd70988652409c911a7be.png 480w, /assets/static/night-vision-scanlines.f67bb29.11a84ab2f67dd70988652409c911a7be.png 976w\" data-sizes=\"(max-width: 976px) 100vw, 976px\" data-src=\"/assets/static/night-vision-scanlines.f67bb29.11a84ab2f67dd70988652409c911a7be.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/night-vision-scanlines.f67bb29.11a84ab2f67dd70988652409c911a7be.png\" width=\"976\" alt=\"Scanlines Night Vision\"></noscript></p>\n<h2 id=\"shader-5---pixelated-night-vision\"><a href=\"#shader-5---pixelated-night-vision\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shader 5 - Pixelated Night Vision</h2>\n<p>This last shader is going to a slightly different effect and I have to admit it looks better on Shadertoy but I bet someone could use this as a base to create a nice pixelated night vision shader in Godot. The original code for this shader can be found on <a href=\"https://www.shadertoy.com/view/4sGXWh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Shadertoy</a></p>\n<pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// For Godot we have to specify the shader type. Since this shader goes on a ColorRect node, it's 2D and all 2D shaders are of type `canvas_item`.</span>\nshader_type canvas_item<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// In Shadertoy there's a global for frame number which we don't have access to in Godot so we pass that in from code.</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">int</span> frame_number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">get_red</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> sampler<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> uv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>sampler<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">get_green</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> sampler<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> uv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>sampler<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">get_blue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sampler2D</span> sampler<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec2</span> uv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>sampler<span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">random_f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> seed <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>frame_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tseed <span class=\"token operator\">=</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>seed <span class=\"token operator\">*</span> <span class=\"token number\">16807.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2147483647.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> seed <span class=\"token operator\">/</span> <span class=\"token number\">2147483647.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// `mainImage` is always `fragment` in Godot and it takes no arguments.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">fragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Shadertoy has an `iResolution` global variable but we don't have access to that in Godot. The Godot docs recommend either using the following definition below or passing it in manually.</span>\n\t<span class=\"token keyword\">vec2</span> i_resolution <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> SCREEN_PIXEL_SIZE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">vec4</span> fc <span class=\"token operator\">=</span> FRAGCOORD<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> shift <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> size <span class=\"token operator\">=</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// Filtered</span>\n\t<span class=\"token comment\">// RGB Split and Pixelate</span>\n    <span class=\"token comment\">// Instead of `iChannel0` we have `TEXTURE` and `SCREEN_TEXTURE` available to us and since we want this to be a screen shader we use `SCREEN_TEXTURE`.</span>\n\t<span class=\"token keyword\">vec4</span> output_color <span class=\"token operator\">=</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>xy<span class=\"token operator\">/</span>i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">bool</span> top <span class=\"token operator\">=</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;=</span> shift <span class=\"token operator\">-</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> left <span class=\"token operator\">=</span> fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;=</span> shift <span class=\"token operator\">-</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> right <span class=\"token operator\">=</span> fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">>=</span> i_resolution<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> shift <span class=\"token operator\">+</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bottom <span class=\"token operator\">=</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">>=</span> i_resolution<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> shift <span class=\"token operator\">+</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">get_red</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token function\">get_red</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token function\">get_green</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> shift<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token function\">get_red</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token function\">get_blue</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token function\">get_green</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> shift<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token function\">get_blue</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token function\">get_red</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token function\">get_green</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> shift<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toutput_color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token function\">get_blue</span><span class=\"token punctuation\">(</span>SCREEN_TEXTURE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">,</span> fc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// Night Vision</span>\n\toutput_color <span class=\"token operator\">=</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>output_color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>output_color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> output_color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> output_color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> output_color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// Brightness Correction</span>\n\toutput_color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>output_color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> <span class=\"token number\">1.1</span> <span class=\"token operator\">/</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// Scan Lines</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">0.625</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toutput_color <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">0.875</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// Vignette</span>\n\t<span class=\"token keyword\">vec2</span> center_position <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>xy <span class=\"token operator\">/</span> i_resolution<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> len <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>center_position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> vignette <span class=\"token operator\">=</span> <span class=\"token function\">smoothstep</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.125</span><span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n\toutput_color<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">=</span> <span class=\"token function\">mix</span><span class=\"token punctuation\">(</span>output_color<span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">,</span> output_color<span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> vignette<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// Finished!</span>\n    <span class=\"token comment\">// `fragColor` is `COLOR` in Godot.</span>\n\tCOLOR <span class=\"token operator\">=</span> output_color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>This shader is a bit different as it wants to be passed the frame number the game is on to create a seed from it. I'm sure you could bypass this by just passing in <code>TIME</code> instead but I wanted to preserve the original code as much as possible while porting it over to be used as a shader in Godot.</p>\n<p>An image of the effect can be seen below and a short gif of it can be found on Gyfcat <a href=\"https://gfycat.com/goodnaturedconfusedfirebelliedtoad\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>\n<img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 944 432' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-8a4799d11135200e2585bd1efe80293b'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-8a4799d11135200e2585bd1efe80293b)' width='944' height='432' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAdCAYAAAAaeWr3AAAACXBIWXMAAA7DAAAOwwHHb6hkAAALzUlEQVRYw62Y%2bXMcxRXHN%2bxKM3vMXjOzt7SXVru6ZdkchnAYy/iULFnW6pYl46JSRQpSkFQSqpJU5YekUpWigo0NgoCxwRhsfOIDX2Ag/9fL93X3rEbrM7F/%2bFSvV7Pd7/v6vW/32FN6t59K7w1Q6RA4DD4YoPLKIJU/HqTSJxiPrqPyMfA5OAFOgq/BqSEqfzNEHWfAWXAeXFhPHRfBt4pL4DK4ori6nioPoPHsZcUlNRfPy/PzOufUmli7fHpIxvIVYvoSfKFi5ZgRu9DAWqCpdAT63gcHwb8AtHvaD3ZR%2b/vd1H6km/Ifgo/AJz2UPwqO91DhC/BlLxW%2bAqfAN%2bBsHxXOgQvgIrjUT8XL4Aq4Cr4D18B1xQ3FzQHQ/wAGVp%2b/rua5pua8KtcoYK3Ct2rt8yqWM%2bA0YvsanAQnwOfQcExp%2bbfS9gG0HgaHwHtd5Ckd6kNm%2bpClfip/iqwcBZ%2bhCo5h/BzjCXASWfwanAZnwDlk9zy4uA67Ay6DK%2bAq%2bA47c01xHdxwcfMhcZ6/ruC5eN6rah1e75Jcu3yBY0FMZzF%2bg/EU%2bAp8ibi/AMeh45jUxNrKn2BcQdUf7qMitHtKR3qp9GEftf%2b5Rvm/1FAavVT%2bCMk4Dk7iB6fBWXBOcQFcBN8OIhBwFXwHroHrCOoGuAluKb538cND4v6NM89NNTevcU2teQVCLw2KWERc511xngGn1AZ%2bBi1HUD3/RCW8A51/g84VbPzhXvIUV3qIsfe1UWwkSdbeDCX25Sj9eoFyf%2bjAw1UqojXKJ1Al5/qR%2bQEEgElvgJtqdD7fAt%2bDH8BtBoH9%2bAjcdvGDmvtW07qg47pKCG/MGezucbTDQZT7X6uUe7tMqV/lyZ7LkjmRptiuBKXeysMbeqn4QQ95Kh8PUAUmkXy1QObuDJlIgDkh4WTYUzlKzrZRejlPuTfKlP9jlUrIZMdHfVSFGdZgWLXvN1DtNvhpA1Udbq%2bn6o8bHgPr5Vxq3tqPvNaTVLuFEcbYeQLCuZz/jp7%2bbSdlXy9RajFPiZk2siazZLGWPY6mrNCY/V2ZOo8OUmVlAC3waTcVgX0AFTCWpPhkiuJ1MAVmwKwkNptsEJ9LkbWESnkth2y2U%2b5PJcq/24msdsGhe6kC8%2br8eYA6/9PEz/f4fL/vmJ%2bwSTDAMky4uALT/keFsu8UKfVGOyUOQORiejXGGTCXlHFz/NNSS4x17U1RFBpTv0cFwOBLMEZP9dggMakDRZEdkTWmDqbATJbs2awoIXseLOTIXgRoE2sRf1%2bQ2CCx3Eap1/KUfbNE9ltVst6skfWbRwRzJDFX9tcQfACC0arOmmJdxMCxiJg4tnkZK8dtTSsNdaVpL1dAGq1dphqO9CqqwFM53EOVIz0i%2bNh4UwVMp8mcBXNgHiwAZNvclxEVYC2D/eBVlFcD7MZymlrqbfSLPe30xMSjwXNoMzkxr0SuJ1hWIB5zMSNjm1fxctwzaaFBaJmUcJVn3i5Q5woq9RA8ILklQYy1Gw/AJMy9YBJMYcJpMANmscgcmM/IzPPO7wNLYFmxX2K/ihFos3nyTRWoBfj%2bT5zfBhZgYgdW12isuaTYp2JaUDHOyZhF7KyjrjRBG2u0d6UpNQzdwGN0h8joCVF8e0IaIDOJSVQCLExi3SUBNha1lxQIxnYSoEZtJk/eepF89cIj4Z0sUmA%2bLxPrrLGsWFJxNBKQbSRAxDwjdVh1qUkYIfRFX7TI6IJuaPcEKkEKdAYpus0SJhHbq8plShnIjDQYE8YnymvRaQOwBFDu5n6FagEeNbiwt96OHQT1JqYegOtZnsO/gL4/oObfn5FrLSuWVCyLqkURI5u0NMG01FBX5T8hjTD8vEmBDuiGdo%2b/gA/FIMVfSQiTsCakWTRMcPr%2bRihYAsurWECbxg5OliACVTDVxGRRft%2bM8/10ibzTZfLNYJwqUWCuQIn9rjWWFG7zcxvgrMsEXQZo7ZH6Is9a5M9DN7R7tHY/aXk/RbaYsgImkvLIqLurICWzOg8WwN2qwFUJcdDKFTCNNpjELo4qRsA4mAZTd%2bLj7%2bvwjuEs6RuTpD2XJO/2HOmoAFFZTqXdZfdFXPMp1%2b6vPQK5smN7YPKoAmNjnLQcdEO7R8sFSG8PUGzYXntp2Ct7x10FIrOc4Xnn6Lt7JVgYtRlUwKZ2aiklqTWXoNaMDRLU0p4g39Y2iHXt%2bKTEi4oJDKXINv2UjLdS0myleDJA4RcS8JamnXftvohnTuHsvjj%2b%2bFh3Xe7G8W/oCz9jkpaF7rYAJwCZaPNTdNiCeGRsXJ4GcXZMdk520Gl5pNxxJLLrLspjSByLChO0zmEnByFYD1KLYShC1BIIku/FJPnm2OHxzHRejN7ZArVuhpiYRgmzhWyrVZCI47OpkTVqi9NFrLXPdfQt3Hn0iXinZOysQWjZkxbaWKPxdByb4RdV4NGyKgGbkQAWP5aSD6skmPdKQiMRKgnuRMCRNZzf3j6bfEEIDodWQRJ8zyIB%2bLsPbeHbLUfveJ6CvSZZYR%2bZ2H3LjeEj66mIPAXUWlJ85uHEs5bxtNDGGo2n1iQggASgBV5Ghscy4qZk4uE1rTB5n3ZwWmJeHUnzOYq%2blCD/uii1tofJF8Kuh41GFfC/tUqE/ENR0gfBOjUOxSiMdjRDSECkZZVoi/yuHBC3PnHcqfUaJe82Pfex5yp9cywttLHG8FNogbRftIHHyURkE0xwNwxwNCFuS3wrZNPgo0Mcjc2m6LwnzEmEKeIZ49k46bhX6P0has1jt0PBVQwQD5KGM1gfkM80GDQoWApQJOClKARHseuNMeglI91K4WFTHMfC8ObubngcZ8P0JqTxCS1KG2sMPRmj1rROXP0eLQMzQOZjL9lkjiJTI8ggRovfC5AtSxiH63icbDoip/noyYnnjaE4%2bbsN8veFBXp3mLSygUoAeYO0DkN85%2b%2bXfxdj4zOqojdMRkKjiOaliI5E%2bCFe91EECQh2BMjfE8YRZoqKtGdzq3f9pvu%2biJVjHlcadktN5i6MI1kKb%2bAKgO6MUwHIRORFU/x/QGxXUozx0aSsCFUJcVUJMXWndiqC%2by6KO0QAQjTcrPReF31Nu%2bzQdw/6DVE9/lQrBUJeCvifoEDUS/6y3phT6w5ScH0E8SXk7tddFx2163EYnYh7TGkYlZpiO6W%2b0HpUQAoVkOEKQCa4F6IvwAR3wih2ANyVzREwKvtG9A/7wrjrmGRfwBh93sauY7e7sPM9D6D34dCZapB07LqOduHKcM%2bj19AufUgCv8O4e51jG083%2bl3EPyL1xIW2lNDIlaqlsPFcAcIMkInI85Z4IL49KcedYBcYwY9GAV6WzDF5SvD/rPDkbCZ6NSTFd3N5y7GBE7DC/7/gJKRndT4xv7MWkuAHfK9n0eLkGpMxcqzxURm70MBaXNqMdTgFOAHQ7nFKIfJLmOA2lMhWgAdjO1ZLRrSE0xZ8VOKZIHpWxzuEXgut0iWTIeh%2bAD1NrPl7aBX3nILQ2jU78VIDUxPx8QaNylhF3DuVDtajtLHG0CBaIKkLI/RoKhPR55DJrdjZV9Jy3Aa2gx0K0RYZiuMSE%2byC%2bApKs2qspeYGZdv1mOC53HM3ravDXEMDMTK3pKSR73TFvV1pcWkzBlEBSb9oA4%2bTifDGGEXRU1G8I7OpCbaCbQCvypxFvkKycA1vUlqnRHeoNlEL3Zuue3C/37jnVmtqbspB0R4RtERsh4p7m9LAWoQ2W4zB/ii1JHRhhB6RCa6AZ%2bABw%2bijzSijYbAF2dqiMocxPADxJZntBpW1%2bDubqD4mXHPqnXeu24inHMJrbpiiT9ty11%2bRsbMWoQnaTGg0%2blEBCehOcgWoTIRxP469jCxtQpZ43IxdR7ZieBEJdkdIK3KWQ2vpcFFZC1cK9%2bdjoWnuNet2rMbDCdBKQYGBPhd6hqWWqNLG34X6UAG2LnxAJQAmCEePbYJR4Bob2wReTlJ0oy0yquHdWS9hgWJIjg7lJjqaqDwGOu5C87qltYjNQswhbFzsBVvqYYQ2mGAvTFAkwE//BcAmDfe5vF8yAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"944\" alt=\"Pixelated Night Vision\" data-srcset=\"/assets/static/night-vision-pixelated.82a2fbd.5b55d8714e5312ac70a694d521e5b507.png 480w, /assets/static/night-vision-pixelated.015fddb.5b55d8714e5312ac70a694d521e5b507.png 944w\" data-sizes=\"(max-width: 944px) 100vw, 944px\" data-src=\"/assets/static/night-vision-pixelated.015fddb.5b55d8714e5312ac70a694d521e5b507.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/night-vision-pixelated.015fddb.5b55d8714e5312ac70a694d521e5b507.png\" width=\"944\" alt=\"Pixelated Night Vision\"></noscript></p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h2>\n<p>I know that it has been mostly code but I hope that you see that porting over shaders from Shadertoy to Godot really isn't very difficult and even easier with the official documentation on it <a href=\"https://docs.godotengine.org/en/stable/tutorials/shading/migrating_to_godot_shader_language.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/night-vision-grainy.07cc2b7.2cd1dc3af9be86c655682d93eded84c4.png","size":{"width":860,"height":435},"sizes":"(max-width: 860px) 100vw, 860px","srcset":["/assets/static/night-vision-grainy.a67b0b2.2cd1dc3af9be86c655682d93eded84c4.png 480w","/assets/static/night-vision-grainy.07cc2b7.2cd1dc3af9be86c655682d93eded84c4.png 860w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 860 435' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-510fb6af4a9deb9fccee7563678d6f4a'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-510fb6af4a9deb9fccee7563678d6f4a)' width='860' height='435' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAMeUlEQVRo3s1Y%2bXedVRV9md%2bQvOS9JC/Te2mSTnRM0zZpm07Y2mpbOkHFagUEKqgMLSWmLZW2tDigSxfOA06gIlRQQCpYpEAFa6WAiiz8b65n73Pu/e4L6fJX31pnffe703fPvvvsc%2b9LNS5pcel1BZfd1umaP97t8reWXetd/a5tctAVTsx0xS/Ndu3fmOs6vzffdf5wget8ZIEr/WKR6/rVYtf1%2bLDr%2brU8nxhW%2b81wVbn7zBLX/aTYbxPrwvtTYk%2bPaN3vRpL2M/Z8SsuYR8cMqz0RGb77S7PHFrvSo4tc6ScLuc6O78xzHQ9f5dq/OscVT85ybYcHXeuBGS6/v%2bya9/a47PaSS68vuKaRFpdqWpbnS3a7APDJHpe/rczOhfuGOLj963M5IZwv/WyhfvjxyMEz6kTPs0tdzx/U%2bP7c0sSsvufsMu33vNgfl6k9v0zf0f7s0upxZ609moeAPSP2%2bxEFygMrayo9ZiD8eIHr%2bPY81/7QHNf%2blTmu8MWZru2eAZe/veKa9/W43K6Sy2woOvhOADIfKrrcjpJr%2bVSvAFBxbYcGXOF4tPvfnc%2bJ8QGiL7vBj8sighOy2N6XRsWWu94Xxf5kz5el7s9qfa%2bMud5z1oa%2beKLN18X158xejEzee16Q77ywXL/5zFIa2STAgJVkwiMLlQXfFBZ8WQC4fyZ9av18v2u5oVcB2NjumkZbBYDlAsDGIivRmP%2bsADAxqLsvCIJKnT%2bIAHhSaYkdwULihfe9OqZOnh9Ve1mdZp0BwT6vjYV29kHdea2nXViRtJ%2b3OVAv/QjYS6MBHDJHGITN4OaACT9fRMZ2fEtZUDwhYfCFQQXgJgHg2i6X%2bXAVAO0KwI297ITOYADpL1Tq/JHFfbzz2IlzyxMnXkkW3/cXsTfsCXt9hba9ruXyX1cm7Re0vnxxpb5LG8rsg/4Ax/f1c8QAAoSzGibdTyehAK1iGHxtris%2bYADcGQGwWQAYiwG4rsu13NLnWu%2b2%2bD81i4PJAADwqNLfx3ugJZzHwvwC31Dny38TJy6tcuW/r6IzdAp1eL9kdtHq34zefR9fvqhgBUC8vToWwGcYPmcsgBCLMJZ%2bulABkE0snppNnyiEIvK5Pd0us0kAWAEABAWIYHqNCOE1ndSB1rtmKAMekvj//nylvogfBM%2bLU6C%2bUTcsOHb8TTOpq7w17ipvj/NZvqwO%2bzLq0Y/Py9XjAjgeSA/EawaA6QI0geKI7CFrhWBj46BhDAERQe6%2baF16bYGZL72yTQAQFFDBbCBPUIMZYa%2bkxM%2bUXdu9A654ejZFBWEABnDnEc8XjPIXViQ7ieclBaHyzjiNzlm58o/V6jjqUH5HgYGDfH/b%2br1lhvGeFd4uRmzweiGb0S2CiJSIVFh8cDaFD1kN6R0%2bYddjX9PjAGClATCqz%2bzmDpfbWWJIYCAYgdBgdhAUC8c0O0BkoAlAnwzALl1WR/v/vcZV/rWaz/73tFx5dzXL/e%2bv0TLa/rOW7%2byPce9pW%2bWf1v5%2b8k57NwEPIUenRZCR9sBW5vx7ZjDdYc1YO1J788cUAPiWubrI2E8AAAPWJQCAATk5KGAQBrfcrM5DQKAPCA8AAWbggAGBQa7teHge0ac%2bnB8L4ufj3IsjgTIqe21gjPvnpVVJP9RFmQHhBxaCjfgmqS0HNmQtrKn1oK6v9Y5%2bgoB4JwjiC6if/WiHHoBGIwDSq9oUleV2IJJO6EwA9hkAn6todjDHC0eG6DyEBTmWJocN6AbK2Am0MZscHdJ%2bsKNm6O/LGHdsKDE/bsoYUDp8534dw%2b/4MbIe5vqDBoBQH2sHAGAzAdjSUeUrdE9PgoIEUVnnGdBJAEj/m/r0dBgB4HefH8dxWTIGmMCn6AVU1y%2bGYyYG6FR4TloZ8xwaSMrYyXuj%2bkNWljEAQOeeRcfxPQVCDjlHZBw2Bd8ES2WtOPZ6AJqv76ZP8I0MQAjIxjMN1pXTrmFurhoAMOD6KAREDPMyaaD/hLJAd093HnQkCKd1oWSJLZ5j8PTOezBQPjIYAGWuBmi%2bXwwAHAcIsJMKggeA35rQ834IgVsjBuzpoq5lP5JoQMO8nKuvpAWA7kbXMCurtIgAwCAC8Ok%2boolJiS4WOGnUNsp72gcWnJplTlY7QWofGaouH46A8fEcMwHgST8PLM3vvt%2bAo0MBaKwRIZuHCAp7efYHADj%2bggHQO9G9htlZV9fTJACUGl39YCYwIGtpkABAAyR38oYIBhyYkezmkcEkno8bAKe8zaYTwdlJc8jvfmyHEnDC7sfAWWgg8wQGnI704OhQFXvIABx5AYAPAcsCIQQAgGx6XVejANBZDQByJbJAACBmAADwC/Yi6J3HwvwiH5iVOB07OxntrN/dWB8mBj8QKh7EaRlwLBHJAMDdkQgaA6gBOzQEAgNmCgAlAtDg6gcyVWkwGwNwswLgNQAf8PHLBRyPGOBZgEPIFCHzi6PTEKsDU2J9IgEG/0dw98A%2bcQRtQQMguidUc0IWAkg2D8YyBKABN%2bo5IGQBrwECQD0AkM1P1QKAGZlwOAADfAi0AIBbTATllhgY4LOAT2UAAYs6HTFAnMM4sAmpNbu1UxcgAPOE6SnvATmocyN/53aX9DAG4eKptId0R2jxGydjDRhSIT2s7CJTPQOEvc2f6AkimLGDEDJA/VDGYfNTtR0AIC0MyCcaIHcC3Jgw2IcAzwJyGAr09UJ4RHeBWcAUGoDAQSCfXt3GuMN/DjDkXswbs4LOTyggud1d%2bn0I8S415G8wgmeBSHj9eSKIJjXAANhvAOzrqdYACwEAAN8VgAFjAACQXeICrjMAQMP9xgCvAz4N3jcUwoD0P2Fp0C4f%2bDDOGHAaRvSFZaClz9c0nDJl8WAb2SLf53ObAgH2AAjS3kIuHIh8JjFNQZhi98EygBY0YFekAWMxAO0RA%2bKjsD8HSBxhMi7UUiHD4LAKVDjB%2bXCQcriAyMJ564KBCXYL4/%2bPWBRAxjEVlL/WaLqhSOepRdgMM/yBwb/qJNTiU2JIo4fUeX8O8BriNaCKAVUAFA0AnANkkfgQkd9jDLhB0yBPg3ckuxWEa3IwsAELwQc9g%2bAI7xpwXq6eiD1eu7dre3BcaM935GqECbKRAEHb2G5WJGj4NuN%2bMjpZWgiEDCBsJQCydmoAwmqbAWAXP2S%2bBIB%2bA0Doyh0A5XZ3JcdhiSWKoUxMhUU4AOkDCRvAEDqD2N1hIrZDDx90ADu6xcJrZyJyjHP0BwgyHhoUwmZtIVxawgFNxvBvu3DUVg3hKZDiV1H6M/7tIrRTwwjrwLw4/iPsEwDkSNg0kucOZdYXSblwJTYdQCgQBNyybq%2bECxJQRxtVfovGLW2r2XYzOL69M8Q1F7VN67NW78fzH1uhKRYaLmlbbbx9h3/c3KkawvVgc26z9AfqI/YtA3BuhBHYhXvP0jxZj/BP1RbqXV1fk2tc1KxngTVKP3wEH2Q22Gs3Q7scEYj9KjTYOYQNd3izxipSKc3KPobJBm%2bb4mf1uOxW1QDWCfVZv1HfOZe9A0iGpz/3wyz3I3WGO8AWnT%2b9Ri9AjcMt3HT4nqptFQC6m3g5AAv4B8n6QhAjngp32cFIhA2oenRJV6/uNgYMwjvRXl8IZR/bFFrfZ4O1XZ08eU31adPrQDyHCWn4pjjmBZtPiOse0xV/BQZgOACJb/CxcUGzq%2bttcvA9VdNcxxMRzsZoIO0gXIIWP7pJd5b03N4ZqAthA2PY1wSOZQjduAke6la2VpWZbn37eNKX/abMgyfL40l9uMpave/LEIHD11g4IZNsbA%2bpF3OD%2bo0Lm13DHL0H1LTUCQCZWlfbVk9K1M/MuIarcq5xcYsCsdI%2bjgmwa0JHOI5woQmVGkda9LkkKo/Yuxg/uiRqH4nah5P%2bTVPrhqP3qd%2bYrq%2bs2YdvcNqDhjVIe8P8HDcaog/tg%2b%2bpVEONq8nVuVphAWiBRuRI/EfQOL%2bZA4MjwhCcoXGVDCZoom/DnJyWaVauas9Wm6/D09ucqfNE7dPN69cw1xzDBmLNHiCsXd5Duxz54SMuQWB%2bqrFGAKhNuQCCxASUEfQgGOU00wVyJoQS/x1wAm99ZuWo3DelzQxzTe1bX47qp5snmquq39Rv%2bPXI/T6sHeuGCbPZJvVIe2B7cB6%2by0/iQKzOgEjXuppsHeODgMiA2ny9vue1zHpvbWatV3hOZ1ca1/o/%2bl5pLm%2b2PjjI9Vo7ythg%2bEbH62rU55QHYKqhsdZA8VZf80Fr%2bD%2bw6dYFB%2bsiH2pTscNV9l9xyWqoRWtRtwAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}}},"context":{}}